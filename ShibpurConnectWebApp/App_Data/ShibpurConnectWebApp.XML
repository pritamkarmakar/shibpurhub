<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShibpurConnectWebApp</name>
    </assembly>
    <members>
        <member name="T:ShibpurConnectWebApp.HangfireAuthorizationFilter">
            <summary>
            Hangfire authorization filter
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.ApplicationUserManager.AddUserToRolesAsync(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Method to add user to multiple roles
            </summary>
            <param name="userId">user id</param>
            <param name="roles">list of role names</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.ApplicationUserManager.RemoveUserFromRolesAsync(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Remove user from multiple roles
            </summary>
            <param name="userId">user id</param>
            <param name="roles">list of role names</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,ShibpurConnectWebApp.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,ShibpurConnectWebApp.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},ShibpurConnectWebApp.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:ShibpurConnectWebApp.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.#ctor(ShibpurConnectWebApp.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,ShibpurConnectWebApp.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:ShibpurConnectWebApp.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ShibpurConnectWebApp.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.DiscussionController.DiscussionDetail(System.String,System.String)">
            <summary>
            We use this action for the feed content appear in the activity page.
            For example when user will click on someone's answer feed then this action will be called
            </summary>
            <param name="id"></param>
            <param name="answerId"></param>
            <returns></returns>
        </member>
        <member name="T:ShibpurConnectWebApp.Controllers.SlugToIdAttribute">
            <summary>
            Filter to retrieve the question id using the seo friendly url (slug)
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AnswersController.GetAnswers">
            <summary>
            Will return all available Answers
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AnswersController.GetAnswer(System.String)">
            <summary>
            API to get details about a specific answer
            </summary>
            <param name="answerId">answerid to search</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AnswersController.GetUserAnswerCount(System.String)">
            <summary>
            Get the total answer count of a user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AnswersController.GetAnswersByUser(System.String,System.Int32)">
            <summary>
            API to get list of answers posted by an user
            </summary>
            <param name="userId">userId for whom we want this list</param>
            <param name="page">page index</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AnswersController.PostAnswer(ShibpurConnectWebApp.Models.WebAPI.AnswerDTO)">
            <summary>
            Post a new answer
            </summary>
            <param name="answerdto"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AnswersController.NotificationToAllFollowers(ShibpurConnectWebApp.Models.WebAPI.Question,ShibpurConnectWebApp.Models.WebAPI.CustomUserInfo,System.String)">
            <summary>
            Method to send email notification to all the followers of the question
            We will send notification whenever there will be a new answer post in the question
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AskToAnswerController.GetAskToAnswer(System.String,System.String)">
            <summary>
             API to check if we have asked a user to answer a question
            </summary>
            <param name="questionId">question id</param>
            <param name="userId">User to whom we have asked to answer the question</param>
            <returns>AskToAnswer object; if not found then null</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AskToAnswerController.GetResponseRate(System.String)">
            <summary>
            Get the response rate for a user. We will calculate this based on how many request for answer he/she has received 
            and how many he/she responded
            </summary>
            <param name="userId">user id</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AskToAnswerController.UpdateHasAnswered(ShibpurConnectWebApp.Models.WebAPI.AskToAnswer)">
            <summary>
            Update the 'HasAnswered' column for a particular record
            </summary>
            <param name="askToAnswer"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AskToAnswerController.PostAskToAnswer(ShibpurConnectWebApp.Models.WebAPI.AskToAnswerDTO)">
            <summary>
            API to save the Ask to answer request 
            </summary>
            <param name="askToAnswer"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CareerController.GetJobs(System.Int32)">
            <summary>
            API to get available jobs
            </summary>
            <param name="page">page number to get the jobs</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CareerController.GetJob(System.String)">
            <summary>
            API to get details about a specific jobId
            Note: we are not caching this API as we don't want to restrict the 'JobApplications' collection. 
            This will be different for each user
            </summary>
            <param name="jobId">jobId to retrieve the details</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CareerController.PostJob(ShibpurConnectWebApp.Models.WebAPI.JobDTO)">
            <summary>
            API to post a new job
            </summary>
            <param name="jobDto"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CareerController.CloseJob(System.String)">
            <summary>
            Close a job
            </summary>
            <param name="jobId">jobid to close</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CareerController.GetJobApplicationCount(System.String)">
            <summary>
            Get the total application count for a specific job
            </summary>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CareerController.ApplyForAJob(ShibpurConnectWebApp.Models.WebAPI.JobApplicationDTO)">
            <summary>
            API to post a job application
            </summary>
            <param name="jobApplicationDto">JobApplicationDTO object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CareerController.UpdateUserActivityLog(ShibpurConnectWebApp.Models.WebAPI.UserActivityLog)">
            <summary>
            Updates the user activity log.
            </summary>
            <param name="log">The log.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CareerController.IncrementViewCount(System.String)">
            <summary>
            Increment view count for a question
            </summary>
            <param name="question"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.JobApplicationCommentsController.GetCommentsForJobApplication(System.String)">
            <summary>
            Get list of comments available in a job application
            </summary>
            <param name="applicationId">applicationId to search</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.JobApplicationCommentsController.PostComment(ShibpurConnectWebApp.Models.WebAPI.JobApplicationCommentDTO)">
            <summary>
            Add a new comment for a job application
            </summary>
            <param name="comment">JobApplicationCommentDTO object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.JobApplicationCommentsController.EditComment(ShibpurConnectWebApp.Models.WebAPI.JobApplicationComment)">
            <summary>
            Edit a new comment for a question
            </summary>
            <param name="comment">Comment object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.FeedController.GetPersonalizedFeeds(System.Int32,System.Int32)">
            <summary>
            Gets my feeds.
            </summary>
            <param name="loggedInUserId">The logged in user identifier.</param>
            <param name="page">The page.</param>
            <param name="alreadyShown">The alrady shown.</param>
            <returns></returns>   
        </member>
        <member name="T:ShibpurConnectWebApp.Controllers.WebAPI.PersonalizedQAStatus">
            <summary>
            Question and Answer status of an user
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.SkillSetsController.GetSkillSets">
            <summary>
            Get all existing skillsets
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.SkillSetsController.GetSkillSet(System.String)">
            <summary>
            Get details about a specific skillset
            </summary>
            <param name="categoryName">category name</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.TagsController.GetTags">
            <summary>
            Get all existing categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.TagsController.GetTag(System.String)">
            <summary>
            Get details about a specific category
            </summary>
            <param name="categoryName">category name</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.TagsController.GetPopularTags(System.Int32)">
            <summary>
            Get tags with question count
            we use this api in http://shibpur.azurewebsites.net/Tags page
            </summary>
            <param name="count">no of categories that we want</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.TagsController.GetPopularTags">
            <summary>
            Get all the tags by popularity (no of questions tagged to each tag)
            We are using this api in the Tag>Index page
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.TagsController.FollowNewTag(System.String)">
            <summary>
            API to follow a new tag
            </summary>
            <param name="tagName">new tag to follow</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.TagsController.UnfollowTag(System.String)">
            <summary>
            API to unfollow a tag
            </summary>
            <param name="tagName">tag to unfollow</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.TagsController.FindUserTags(System.String)">
            <summary>
            API to return all tags that one user is following
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.TagsController.DeleteCategories(System.String)">
            <summary>
            Delete a category
            </summary>
            <param name="categoryName">category name</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CategoryTaggingController.GetQuestionCount(System.String)">
            <summary>
            Get the total question tagged with the specific category
            </summary>
            <param name="categoryId">category id</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CategoryTaggingController.PostCategoryTagging(ShibpurConnectWebApp.Models.WebAPI.CategoryTagging)">
            <summary>
            Save a new category tagging
            </summary>
            <param name="categoryTagging"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.EducationalHistoriesController.GetEducationalHistories(System.String)">
            <summary>
            Api to get all educational histories of a user
            </summary>
            <param name="userId">userId</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.EducationalHistoriesController.PostEducationalHistory(ShibpurConnectWebApp.Models.WebAPI.EducationalHistoriesDTO)">
            <summary>
            Save a new educational history for a user
            </summary>
            <param name="educationalHistory"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.EducationalHistoriesController.EditEducationalHistory(ShibpurConnectWebApp.Models.WebAPI.EducationalHistories)">
            <summary>
            API to update an educational history record of an user
            </summary>
            <param name="educationalHistories">EducationalHistories object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.EducationalHistoriesController.DeleteEducationalHistory(System.String)">
            <summary>
            API to update an educational history record of an user
            </summary>
            <param name="educationalHistories">EducationalHistories object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.EducationalHistoriesController.DeleteAllEducationalHistories(System.String)">
            <summary>
            This is not a public API. We will use it do background operation with Hangfire. 
            This will delete all the educatioanl histories for a particular user
            </summary>
            <param name="userId">userId for whom we want to delete all records</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.EmailsController.SendEmail(ShibpurConnectWebApp.Models.WebAPI.Email)">
            <summary>
            API to send email to end user
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.EmploymentHistoriesController.EditEmploymentHistory(ShibpurConnectWebApp.Models.WebAPI.EmploymentHistories)">
            <summary>
            API to update employment history record of an user
            </summary>
            <param name="employmentHistories">EmploymentHistories object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.NotificationsController.GetNotifications(System.String)">
            <summary>
            Get all the notifications for a particular user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.NotificationsController.GetNewNotifications(System.String)">
            <summary>
            Get all the new notifications for a user to show the bubble count in the navigation bar
            </summary>
            <param name="userId">userid to search for new notifications</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.NotificationsController.PostNotification(ShibpurConnectWebApp.Models.WebAPI.Notifications)">
            <summary>
            Submit a new notification
            </summary>
            <param name="notification">Notification object</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.NotificationsController.MarkAllNewNotificationsAsOld(System.String)">
            <summary>
            Mark all notifications for a user as Old. This api will remove the bubble notification that we get for all new notification in the navigation bar
            </summary>
            <param name="userId">userid</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.NotificationsController.MarkNotificationsAsVisited(System.String)">
            <summary>
            Mark a notification as visited. We use this method in the Notification pane when user click on a particular notification to mark that as visited
            </summary>
            <param name="notificationId">Notification Id</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.NotificationsController.DeleteAllNotificationsPostedByAUser(System.String)">
            <summary>
            method to do cleanup in the notification collection if user delete his/her account
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetTotalQuestionCount">
            <summary>
            Get total question count
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetUserQuestionCount(System.String)">
            <summary>
            Get the total questions posted by a specific user
            </summary>
            <param name="userId">userid for whom we want to do the searh</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetQuestions(System.Int32)">
            <summary>
            Will return all available questions
            </summary>
            <param name="page">provide the page index</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetQuestionsByCategory(System.String,System.Int32)">
            <summary>
            qquestions for a particular category/tag
            </summary>
            <param name="category">category/tag name</param>
            <param name="page">page index</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.DeleteAllQuestionsPostedByAUser(System.String)">
            <summary>
            Not a Public API, will be used by Hangfire to delete all question posted by a user, if the user delete his/her account
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetQuestionsByUser(System.String,System.Int32)">
            <summary>
            Get the questions posted by a specific user
            </summary>
            <param name="userId">userid for which we are searching</param>
            <param name="page">page index</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetQuestionInfo(System.String)">
            <summary>
            API to get question details like title, details, posted by user, datetime etc. This will not give you the associated answers and comments
            </summary>
            <param name="questionId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetQuestion(System.String)">
            <summary>
            Will return a specific question with answers and comments. 
            If you just need only question details without comments and answers then use GetQuestionInfo method
            </summary>
            <param name="questionId">question id</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetAnswersCount(System.String)">
            <summary>
            Get the answer count for a particular question
            </summary>
            <param name="questionId">question id</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetPopularQuestions(System.Int32)">
            <summary>
            Get popular questions by total answer count
            </summary>
            <param name="count">no of questions to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetViewCount(System.String)">
            <summary>
            Get total user view count for a particular question
            </summary>
            <param name="questionId">question id</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.IncrementViewCount(ShibpurConnectWebApp.Models.WebAPI.Question)">
            <summary>
            Increment view count for a question
            </summary>
            <param name="question"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.FollowQuestion(System.String)">
            <summary>
            API to follow a question to get all updates like new answer/comment post in the question
            </summary>
            <param name="questionSpam"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.UnfollowQuestion(System.String)">
            <summary>
            API to unfollow a question
            </summary>
            <param name="questionId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.GetQuestionFollowers(System.String)">
            <summary>
            Get the list of users who are following this question
            </summary>
            <param name="questionId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.ReportSpam(ShibpurConnectWebApp.Models.WebAPI.QuestionSpam)">
            <summary>
            API to mark a question as inappropriate
            </summary>
            <param name="questionId">questionid to mark</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.PostQuestions(ShibpurConnectWebApp.Models.WebAPI.QuestionDTO)">
            <summary>
            API to post a new question
            </summary>
            <param name="question">QuestionDTO object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.EditQuestion(ShibpurConnectWebApp.Models.WebAPI.QuestionDTO)">
            <summary>
            API to edit a question
            </summary>
            <param name="question">QuestionDTO object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.QuestionsController.UpdateUserActivityLog(ShibpurConnectWebApp.Models.WebAPI.UserActivityLog)">
            <summary>
            Updates the user activity log.
            </summary>
            <param name="log">The log.</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AccountController.Register(ShibpurConnectWebApp.Models.RegisterViewModel)">
            <summary>
            POST: Register a new user
            </summary>
            <param name="userModel"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AccountController.FindUser(System.String,System.String)">
            <summary>
            Find user, you have to provide your email and password. This API will help you to get userid, that require for making any POST call
            </summary>
            <param name="userEmail">user email</param>
            <param name="password">password</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AccountController.Me">
            <summary>
            API to find the current logged-in user
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AccountController.DeleteAccount">
            <summary>
            Delete the user account
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AccountController.UpdateLastSeenTime">
            <summary>
            API to update user last login time
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.AccountController.DeleteAllRecords(System.String)">
            <summary>
            This is where Hangfire will do the background task
            We will remove all the educational, employment, answer, comments details associated with this user, when user will delete his/her account
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.SearchController.SearchUsersWithCompleteProfile(System.String)">
            <summary>
            API to search users from all documents for mathing search term
            </summary>
            <param name="searchTerm">comma separeted search term</param>
            <returns>UserProfile list</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.SearchController.SearchUsers(System.String)">
            <summary>
            API to search users across personal profile, educational and employment background but return only personal profile 
            information in the return object, this is a faster API and data retrieved from elastic search only.
            If you need complete user profile (personal profile, educational, employment) in the return object then use SearchUsersWithCompleteProfile method
            </summary>
            <param name="searchTerm">comma (,) separeted search term</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.SearchController.SearchUsersAskToAnswer(System.String,System.String)">
            <summary>
            API to search user who can answer a specific question based on the question tagging. This is very similar to 'SearchUsers' 
            API but here we will include the users that we manually searched and asked to answer this question
            </summary>
            <param name="searchTerm"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.SearchController.SearchUsersByNameEmail(System.String)">
            <summary>
            Method to search user by email or name. We are using this API in 'Ask To Answer' search box
            </summary>
            <param name="searchTerm"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.StatusController.GetDatabaseStatus">
            <summary>
            API to indicate whether we can connect to database or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.UserActivityController.GetUserLoginLog">
            <summary>
            API to get user last login log (when we have shown the toast notification to update user profile and when user logged in into the system)
            </summary>
            <param name="loginlog"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.UserActivityController.ToastNotificationLog(System.String)">
            <summary>
            API to update user login details, mainly to track when we have shown the toast notification to update user profile and when user logged in into the system
            </summary>
            <param name="type">edu = when user saw last toast notification to update educational background toast notification
            emp = when user saw last toast notification to update employment background toast notification</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.UsersController.GetNonBECUsers">
            <summary>
            Get all system users, this will give result order by (descending) user reputation
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.UsersController.FindUsersForAYear(System.String)">
            <summary>
            API to get list of users of a particular batch
            </summary>
            <param name="graduationYear"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.UsersController.FindAllBECUsers(System.String)">
            <summary>
            API to get all BEC Users based on graduation year
            </summary>
            <param name="skipyears">if we want to skip any year from this list, we do it in the User > index page to exclude logged-in user senior, junior and his/her graduation year. Because we retrieve those users using FindUsersForAYear API</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.UsersController.GetUsersByReputation(System.Int32,System.Int32)">
            <summary>
            Get list of users based on reputation
            </summary>
            <param name="startIndex">startindex for pagination</param>
            <param name="count">total no of users we want</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.UsersController.GetTotalUserCount">
            <summary>
            Get total users count in the application
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.UsersController.GetUsersByTerm(System.String)">
            <summary>
            Search users by name, email, company name, location etc
            </summary>
            <param name="searchTerm">search term (can be location/company name/ user name/email etc)</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.WebApiCacheHelper.InvalidateCacheByKey(System.String)">
            <summary>
            Invalidate a particular cache using the provided key
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.WebApiCacheHelper.InvalidateCacheByKeys(System.Collections.Generic.IList{System.String})">
            <summary>
            Invalidate multiple cache using the list keys
            </summary>
            <param name="keys"></param>
        </member>
        <member name="T:ShibpurConnectWebApp.Controllers.WebAPI.WebsiteAlertController">
            <summary>
            Controller to keep all website maintenance, connectivity issue alerts
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.WebsiteAlertController.SendEmailNotificationForOutage(ShibpurConnectWebApp.Models.WebAPI.WebsiteAlert)">
            <summary>
            Send email notification for any outage. This method validate if there is already email sent for the same 
            error in last one hour then don't send again
            </summary>
            <param name="alert"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.WebsiteAlertController.GetExistingAlerts">
            <summary>
            Method to load local json file
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.WebsiteAlertController.SaveNewAlert(ShibpurConnectWebApp.Models.WebAPI.WebsiteAlert)">
            <summary>
            Save new alert
            </summary>
            <param name="alert"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.CacheManager.SetCacheData(System.String,System.Object)">
            <summary>
            Method to save cache data, if it is not present
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.CacheManager.OverwriteCacheData(System.String,System.String)">
            <summary>
            Method to overwrite cache data even it is already exist
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.CacheManager.RemoveCacheData(System.String)">
            <summary>
            Method to delete existing key from in-memory cache
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.ElasticSearchHelper.ElasticClient">
            <summary>
            Method to create the Elastic Search client instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.HttpGETResponse(System.String,System.String)">
            <summary>
            Method to retrieve the response of a http GET request
            </summary>
            <param name="url">Web API URL (I'm consuming this from web.config)</param>
            <para name="token">BEarer token required to access Web API</para>
            <returns>response from the GET request</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.HttpPostResponse(System.String,System.Net.Http.HttpContent)">
            <summary>
            Method to retrieve the response after http POST request
            </summary>
            <param name="url">API URL</param>
            <param name="content">HttpContent httpContent</param>
            <returns>response after the POST request</returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.IsUserAuthenticated(System.String,ShibpurConnectWebApp.Models.LoginViewModel)">
            <summary>
            Method to check whether user is valid. This will make a call to the "/Token" API and will retrieve the Bearer token. 
            For invalid user the response will be blank
            </summary>
            <param name="webApiurl"></param>
            <param name="loginViewModel"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.PostTag(ShibpurConnectWebApp.Models.WebAPI.Categories)">
            <summary>
            Method to post a new tag, this is not in api as we don't want end user to create tag using api
            It will be called while posting a new question
            </summary>
            <param name="category">Categories object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.PostSkillSet(ShibpurConnectWebApp.Models.WebAPI.SkillSets)">
            <summary>
            Method to post a new skillset, this is not in api as we don't want end user to create skillset using api
            It will be called while posting a new question
            </summary>
            <param name="skillSets">SkillSets object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.ReportSpam(ShibpurConnectWebApp.Models.WebAPI.QuestionSpamAudit)">
            <summary>
            internal method to update the QuestionSpamDTO collection
            </summary>
            <param name="questionSpamDto"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.GenerateSlug(System.String)">
            <summary>
            Generate url slug using quetion title
            </summary>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.GetQuestionIdFromSlug(System.String)">
            <summary>
            Get the question id using the slug url
            </summary>
            <param name="slugUrl">question slug url</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.CheckUniversityName(System.String)">
            <summary>
            Method to check whether the university name is belongs to BEC
            </summary>
            <param name="universityName"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Helper.Helper.Compute(System.String,System.String)">
            <summary>
            Compute the distance between two strings. Levenshtein distance algorithm
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Helper.CacheControlAttribute">
            <summary>
            Custom attribute to set NoStore: this will restrict chrome to cache the API request
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.AnswerDTO">
            <summary>
            Object to be used in the PostAnswer controller. Idea is to create a simple request object for post answer
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.Answer">
            <summary>
            We use this model to save into database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.AnswerWithQuestionTitle">
            <summary>
            We will use this model in the user profile page, to show what all answers user have posted
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.CategoryCloud">
            <summary>
            Will use this model in the tag cloud
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.JobApplicationCommentDTO">
            <summary>
            Model to use to post a comment for a job application
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.JobApplicationComment">
            <summary>
            Model to save comment data in database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.JobApplicationCommentViewModel">
            <summary>
            Model with comment user name, to be used by API to send return object
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.CommentDTO">
            <summary>
            Model to use to post a comment
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.Comment">
            <summary>
            Model to save comment data in database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.CommentViewModel">
            <summary>
            Model with comment user name
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CommentsController.GetCommentsForAnswer(System.String)">
            <summary>
            Get list of comments available in an answer
            </summary>
            <param name="answerId">answerid to search</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CommentsController.PostComment(ShibpurConnectWebApp.Models.WebAPI.CommentDTO)">
            <summary>
            Add a new comment for a question
            </summary>
            <param name="comment">Comment object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.CommentsController.EditComment(ShibpurConnectWebApp.Models.WebAPI.Comment)">
            <summary>
            Edit a new comment for a question
            </summary>
            <param name="comment">Comment object</param>
            <returns></returns>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.CustomUserInfo">
            <summary>
            We will use this model in the api/FindUser API. Main intention is to send the userid to the API user, so that we can use the userid for other APIs
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.EducationalHistories">
            <summary>
            We will use this model to save data into database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.AskToAnswerDTO">
            <summary>
            AskToAnswer model for the API
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.AskToAnswer">
            <summary>
            Model we will use to save to database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.ImageInfo">
            <summary>
            Model for user profile image
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.JobApplicationDTO">
            <summary>
            Model to use to apply a job
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.JobApplication">
            <summary>
            Model to use to save the record to database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.JobApplicationViewModel">
            <summary>
            Model to use in the API as return object
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Models.WebAPI.JobApplicationViewModel.ApplicationComments">
            <summary>
            List of comment associated with this job
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.JobDTO">
            <summary>
            Data model to post a new job opportunity
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.Job">
            <summary>
            Data model to save the job in the database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.JobViewModel">
            <summary>
            We will use this model to send from the API. It has the user display name alongwith Job object parameters
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Models.WebAPI.JobViewModel.JobApplications">
            <summary>
            List of job applications associated with this job
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.Notifications">
            <summary>
            Notification model
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Models.WebAPI.Notifications.UserId">
            <summary>
            userid for which this notification is
            </summary>
        </member>
        <member name="P:ShibpurConnectWebApp.Models.WebAPI.Notifications.NotificationByUser">
            <summary>
            userid of the user who caused this notification
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.NotificationTypes">
            <summary>
            Notification types that we support
            ***Don't add a new notification type in between this list as it will break the UI (because each enum correspond to an integer).
            If we need to add a new type then add it at the end ***
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.UserByBatch">
            <summary>
            Model to hold user by graduation batch. Will use it in Users Page
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.UserProfile">
            <summary>
            Use this model for populating the user profile page with educational history and employment history
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.GetProfile(System.String)" -->
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.GetProfileByUserId(System.String)">
            <summary>
            API to get complete user profile (including educational and employment background) using user id
            We are using this API for the user profile page '/account/profile'
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.GetUserInfo(System.String)">
            <summary>
            Get details about an user from only users collection
            </summary>
            <param name="userEmail">user email</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.UpdateProfileImage(ShibpurConnectWebApp.Models.WebAPI.ImageInfo)">
            <summary>
            API to update user profile image
            </summary>
            <param name="imageInfo"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.UpdateProfile(System.String,System.String,System.String,System.String)">
            <summary>
            API to update user personal profile info
            </summary>
            <param name="userInfo">CustomUserInfo object</param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.InvalidateAllQuestionsCachePostedByAUser(System.String)">
            <summary>
            Not a Public API, will be used by Hangfire to invalidate the cache of all question posted by a user, if the user update his/her account
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.FollowUser(System.String)">
            <summary>
            API to follow a user
            </summary>
            <param name="userIdToFollow">userid that we want to follow</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.UnfollowUser(System.String)">
            <summary>
            API to unfollow a user
            </summary>
            <param name="userIdToFollow">user to unfollow</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.GetUserFollowers(System.String)">
            <summary>
            API to get list of followers of a user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.GetUserFollowing(System.String)">
            <summary>
            API to get following list of current user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Controllers.WebAPI.ProfileController.CheckUserFollow(System.String)">
            <summary>
            API to check if user following another user or not
            </summary>
            <param name="userId">userid to check if current user is following this user to or</param>
            <returns></returns>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.QuestionDTO">
            <summary>
            Object to be used in the PostQuestions controller. Idea is to create a simple request object for post question
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.Question">
            <summary>
            Object to be saved in the database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.QuestionViewModel">
            <summary>
            We will use this to send data from the API. This has a new property UserName. We will add firstname, lastname as well later
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.PopularQuestionModel">
            <summary>
            We will use this model in the most popular question model
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.QuestionSpam">
            <summary>
            Model we use to post a spam report
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.QuestionSpamAudit">
            <summary>
            We will use this model to save the data to database
            </summary>
        </member>
        <member name="T:ShibpurConnectWebApp.Models.WebAPI.SpamType">
            <summary>
            spam types to use
            </summary>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.ChangePassword(System.String,ShibpurConnectWebApp.Models.ChangePasswordViewModel)">
            <summary>
            Method to change the password for an user
            </summary>
            <param name="userId"></param>
            <param name="passwordViewModel"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.UpdateUser(ShibpurConnectWebApp.Models.ApplicationUser)">
            <summary>
            Method to update a user profile data
            </summary>
            <param name="applicationUser">ApplicationUser object</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.UpdateReputationCount(System.String,System.Int32,System.Boolean)">
            <summary>
            Method to update user reputation
            This will update both in mongo and elastic search
            </summary>
            <param name="userId">userid</param>
            <param name="deltaReputation">reputation change amount</param>
            <param name="addReputaion">add/subtract reputation</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.UpdateProfileImageURL(System.String,System.String)">
            <summary>
            Method to update user profile image
            This method will update both in Mongodb and ES
            </summary>
            <param name="userId">user userid</param>
            <param name="url">profile image url</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.DeleteUserAccount(System.String)">
            <summary>
            Delete the user account
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.FollowNewTag(System.String,System.String)">
            <summary>
            Method to add a new tag in users collection for a particular user
            </summary>
            <param name="userId">userid for whom we will do this update</param>
            <param name="tagname">new tag to be added</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.UnfollowTag(System.String,System.String)">
            <summary>
            Method to unfollow a tag
            </summary>
            <param name="userId">userid for whom to remove the tag</param>
            <param name="tagName">tag to unfollow</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.FollowUser(System.String,System.String)">
            <summary>
            Method to follow a user
            </summary>
            <param name="userId">user who wants to follow another user</param>
            <param name="userIdToFollow">to whom userid wants to follow</param>
            <returns></returns>
        </member>
        <member name="M:ShibpurConnectWebApp.Providers.AuthRepository.UnFollowUser(System.String,System.String)">
            <summary>
            Method to unfollow user
            </summary>
            <param name="userId">user who wants to unfollow another user</param>
            <param name="userIdToUnFollow">user to unfollow</param>
            <returns></returns>
        </member>
    </members>
</doc>
