<!DOCTYPE html>

<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewBag.Title</title>
    <link rel="shortcut icon" type="image/x-icon" href="~/favicon.ico">
    <meta name="keywords" content="shibpurhub, shibpur, bec, be college, shibpoore, besu, iiest, bengal engineering college, bengal engineering and sciencce university, indian institute of engineering science and technology shibpur, academic networking" />
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    @*<link href="~/Content/font-awesome.min.css" rel="stylesheet" />*@
    @Styles.Render("~/Content/css")
    @Styles.Render("~/content/themes/base/jquery")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/shibpurconnect")
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        // google analytics script
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-64743276-1', 'auto');
        ga('send', 'pageview');

        var userDetails = localStorage.getItem("SC_Session_UserDetails");
        var userInfo;
        $(document).ready(function () {
            // get the user details only if we have the token for this user and userDetails is null so far
            var token = sessionStorage.getItem("accessToken");
            if (token != null && userDetails == null) {
                scAjax({
                    "url": "account/me",
                    "success": function (result) {
                        if (!result) {
                            return;
                        }

                        userDetails = JSON.stringify(result);
                        localStorage.setItem("SC_Session_UserDetails", JSON.stringify(result));
                        // change the html with user first name
                        if (userDetails) {
                            userInfo = $.parseJSON(userDetails);
                            $('#loggedinuser').html(userInfo.firstName + " <span class='caret'></span>");
                        }
                    },
                    "error": function (err) {

                    }
                });
            }

            if (userDetails) {
                userInfo = $.parseJSON(userDetails);
                $('#loggedinuser').html(userInfo.firstName + " <span class='caret'></span>");
            }

            // toast notification configuration
            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "3000",
                "hideDuration": "1000",
                "timeOut": "8000",
                "extendedTimeOut": "6000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }

            // we don't want to check notification when user in the login or register page. Otherwise the login page will reload again and again.
            // previous issue: user has an invalid token in the local storage and this if condition was not here, so it was making getnewnotification api call with that token, and this api returning 401. 
            // Then scAjax returning the user to the login page and this process was continuing 
            if (window.location.pathname.toLowerCase() != "/account/login" && window.location.pathname.toLowerCase() != "/account/register") {
                // if userinfo is null then dont execute the notification api calls
                if (typeof userInfo != "undefined" && userInfo != null) {

                    // get the new notification count and update notification center
                    jQuery.support.cors = true;
                    var SERVER = "/api/";
                    scAjax({
                        url: "notifications/GetNewNotifications?userId=" + userInfo.id,
                        type: "GET",
                        dataType: "json",
                        contentType: "application/json",
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json",
                        },
                        success: function(result) {
                            if (!result) {
                                return;
                            }

                            if (result.length > 0) {
                                $("#notification_count").show();
                                $("#notification_count").text(result.length);
                            } else
                                $("#notification_count").hide();

                        },
                        error: function(err) {
                            // send alert to admin team

                        }
                    });

                    // get all the notifications
                    GetNotification(userInfo);

                    $("#notificationLink").click(function() {

                        // get current logged-in user details
                        var userInfo = $.parseJSON(userDetails);
                        var SERVER = "/api/";
                        // get all notifications and update the div
                        GetNotification(userInfo);

                        // mark all new notification as old
                        var SERVER = "/api/";
                        scAjax({
                            url: "notifications/MarkAllNewNotificationsAsOld?userId=" + userInfo.id,
                            type: "POST",
                            dataType: "json",
                            contentType: "application/json",
                            headers: {
                                Accept: "application/json",
                                "Content-Type": "application/json",
                            },
                            success: function(result) {
                                $('#askmeto').text("Already Asked");
                            }
                        });

                        $("#notificationContainer").fadeToggle(300);
                        $("#notification_count").fadeOut("slow");
                        return false;
                    });

                    //Document Click hiding the popup
                    $(document).click(function() {
                        $("#notificationContainer").hide();
                    });

                    //Popup on click
                    $("#notificationContainer").click(function() {
                        //window.location.href = "/Notifications";
                    });
                }
            }

            // back to top animation
            $(function() {
                $(document).on('scroll', function() {

                    if ($(window).scrollTop() > 100) {
                        $('.scroll-top-wrapper').addClass('show');
                    } else {
                        $('.scroll-top-wrapper').removeClass('show');
                    }
                });

                $('.scroll-top-wrapper').on('click', scrollToTop);
            });

            function scrollToTop() {
                verticalOffset = typeof (verticalOffset) != 'undefined' ? verticalOffset : 0;
                element = $('body');
                offset = element.offset();
                offsetTop = offset.top;
                $('html, body').animate({ scrollTop: offsetTop }, 500, 'linear');
            }

        });

        // when user will click on any notification we will mark that as visited and next time the background color will change
        function MarkItRead(url, notificationId) {
            var SERVER = "/api/";
            scAjax({
                url: "notifications/MarkNotificationsAsVisited?notificationId=" + notificationId,
                type: "POST",
                dataType: "json",
                contentType: "application/json",
                success: function(result) {
                    //alert('done');
                }
            });

            // redirect user to this notification
            window.location.href = url;
        }

        function GetNotification(userInfo) {
            scAjax({
                url: "notifications/GetNotifications?userId=" + userInfo.id,
                success: function(result) {
                    if (!result) {
                        return;
                    }
                    // remove existing notifications and add new ones
                    $("#notificationsBody").empty();

                    // append notifications
                    jQuery.each(result, function(i, val) {
                        var notificationContent = $.parseJSON(val.notificationContent);

                        // add 's' in the imgur profile image url so that we don't download the full size image
                        if (notificationContent.profileImage != null) {
                            if (notificationContent.profileImage.charAt(notificationContent.profileImage.indexOf('.jpg') - 1) != 's') {
                                notificationContent.profileImage = notificationContent.profileImage.replace('.jpg', 's.jpg');
                            }
                        }
                        // if user hasn't visited this notification then add a different color
                        if (val.hasVisited == false) {
                            // if notification type is 'following' then execute this
                            if (val.notificationType == 0) {
                                var notificationContentWithColor = "<div class='well' id='lessbottommargin' onclick=\"MarkItRead(" + "'/Account/Profile?userId=" + notificationContent.followedBy + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.followedBy + "'>" + notificationContent.displayName + "</a> is now following you</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }
                                // if notification type is 'received answer' then execute this
                            else if (val.notificationType == 2) {
                                var notificationContentWithColor = "<div class='well' id='lessbottommargin' onclick=\"MarkItRead(" + "'/feed/" + notificationContent.questionTitle + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.answeredBy + "'>" + notificationContent.displayName + "</a> wrote an answer to your question '" + notificationContent.questionTitle + "'</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }
                                // if notification type is 'received comment' then execute this
                            else if (val.notificationType == 3) {
                                var notificationContentWithColor = "<div class='well' id='lessbottommargin' onclick=\"MarkItRead(" + "'/feed/" + notificationContent.questionTitle + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.commentedBy + "'>" + notificationContent.displayName + "</a> wrote a comment in your answer in '" + notificationContent.questionTitle + "'</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }

                                // if notification type is 'ask to answer' then execute this
                            else if (val.notificationType == 4) {
                                var notificationContentWithColor = "<div class='well' id='lessbottommargin' onclick=\"MarkItRead(" + "'/feed/" + notificationContent.questionTitle + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.askedBy + "'>" + notificationContent.displayName + "</a> requested you to answer '" + notificationContent.questionTitle + "'</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }

                                // if notification type is 'received comment in question' then execute this
                            else if (val.notificationType == 5) {
                                var notificationContentWithColor = "<div class='well' id='lessbottommargin' onclick=\"MarkItRead(" + "'/feed/" + notificationContent.questionTitle + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.commentedBy + "'>" + notificationContent.displayName + "</a> wrote a comment in your question '" + notificationContent.questionTitle + "'</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }
                        }
                        else {
                            // if notification type is 'following' then execute this
                            if (val.notificationType == 0) {
                                var notificationContentWithColor = "<div class='well whitewell' id='lessbottommargin' onclick=\"MarkItRead(" + "'/Account/Profile?userId=" + notificationContent.followedBy + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.followedBy + "'>" + notificationContent.displayName + "</a> is now following you</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }
                                // if notification type is 'received answer' then execute this
                            else if (val.notificationType == 2) {
                                var notificationContentWithColor = "<div class='well whitewell' id='lessbottommargin' onclick=\"MarkItRead(" + "'/feed/" + notificationContent.questionTitle + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.answeredBy + "'>" + notificationContent.displayName + "</a> wrote an answer to your question '" + notificationContent.questionTitle + "'</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }
                                // if notification type is 'received comment' then execute this
                            else if (val.notificationType == 3) {
                                var notificationContentWithColor = "<div class='well whitewell' id='lessbottommargin' onclick=\"MarkItRead(" + "'/feed/" + notificationContent.questionTitle + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.commentedBy + "'>" + notificationContent.displayName + "</a> wrote a comment in your answer in '" + notificationContent.questionTitle + "'</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }
                                // if notification type is 'ask to answer' then execute this
                            else if (val.notificationType == 4) {
                                var notificationContentWithoutColor = "<div class='well whitewell' id='lessbottommargin' onclick=\"MarkItRead(" + "'/feed/" + notificationContent.questionTitle + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.askedBy + "'>" + notificationContent.displayName + "</a> requested you to answer '" + notificationContent.questionTitle + "'</div>";
                                $("#notificationsBody").append(notificationContentWithoutColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }
                                // if notification type is 'received comment in question' then execute this
                            else if (val.notificationType == 5) {
                                var notificationContentWithColor = "<div class='well whitewell' id='lessbottommargin' onclick=\"MarkItRead(" + "'/feed/" + notificationContent.questionTitle + "','" + val.notificationId + "')\"><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='" + IMGURPATH + notificationContent.profileImage + "'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?userId=" + notificationContent.commentedBy + "'>" + notificationContent.displayName + "</a> wrote a comment in your question '" + notificationContent.questionTitle + "'</div>";
                                $("#notificationsBody").append(notificationContentWithColor);
                                $("#notificationsBody").append("<hr id='nomarginhr'/>");
                            }
                        }
                    });

                },
                error: function (err) {

                }
            });
        }
    </script>

    <style type="text/css">
        .body-content
        {
            padding-top: 25px;
        }
        /*css for the question tag*/
        .post-tag {
            color: #566e76;
            background: #f7fdff;
            border: 1px solid #c0d4db;
            padding: .4em .5em;
            border-radius: 15px;
            text-align: center;
            font-size: 11px;
            line-height: 1;
            color: #3e6d8e;
            background-color: #e4edf4;
            margin: 2px 2px 2px 0;
            text-decoration: none;
            font-size: 12px;
            display: inline-block;
            border-radius: 0;
            border: 1px solid #e4edf4;
        }
        /*align loading div centered*/
        #loadingdiv {
            width: 200px;
            display: block;
            margin-top: 100px;
            margin-left: auto;
            margin-right: auto;
        }

        /*css for back to top icon*/
        .scroll-top-wrapper {
            position: fixed;
            opacity: 0;
            visibility: hidden;
            overflow: hidden;
            text-align: center;
            z-index: 99999999;
            background-color: #777777;
            color: #eeeeee;
            width: 50px;
            height: 48px;
            line-height: 48px;
            right: 6px;
            bottom: 30px;
            padding-top: 2px;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            border-bottom-right-radius: 10px;
            border-bottom-left-radius: 10px;
            -webkit-transition: all 0.5s ease-in-out;
            -moz-transition: all 0.5s ease-in-out;
            -ms-transition: all 0.5s ease-in-out;
            -o-transition: all 0.5s ease-in-out;
            transition: all 0.5s ease-in-out;
        }

            .scroll-top-wrapper:hover {
                background-color: #888888;
            }

            .scroll-top-wrapper.show {
                visibility: visible;
                cursor: pointer;
                opacity: 1.0;
            }

            .scroll-top-wrapper i.fa {
                line-height: inherit;
            }


        .avatar {
            border-radius: 50%;
            width: 40px;
            height: 40px;
            background-color: #CCCCCA;
            cursor: pointer;
            -webkit-transition: opacity ease-in-out .25s 0s;
            -moz-transition: opacity ease-in-out .25s 0s;
            -o-transition: opacity ease-in-out .25s 0s;
            transition: opacity ease-in-out .25s 0s;
        }

        /*class for 12 px font size across the site*/
        .twelvepxfont {
            font-size: 12px;
        }
        /*different separators*/
        hr#bigseparator {
            border-top: 3px double white;
            color: #fff;
            background-color: #fff;
            margin: 8px 0 8px 0;
            width: 90%;
        }

        hr#smallseparator {
            border-top: 1px double white;
            color: #fff;
            background-color: #fff;
            margin: 8px 0 8px 0;
            width: 90%;
        }

        hr#solidseparator {
            border-top: 1px solid black;
            color: #fff;
            background-color: #fff;
            margin: 8px 0 8px 0;
        }

        hr#greyseparator {
            border-top: 1px solid #e0e0e0;
            color: #fff;
            background-color: #fff;
            margin: 8px 0 8px 0;
        }

        /*override css for the answer rich text eitor*/
        .editor-container {
            height: 320px !important;
        }

        .ql-image-tooltip {
            top: 20px !important;
        }

        /* positioning toast notification*/
        #toast-container > div {
            opacity: .8;
            margin-top: 50px;
        }

        /* Sticky footer styles
                    -------------------------------------------------- */

        html,
        body {
            height: 100%;
            /* The html and body elements cannot have any padding or margin. */
        }

        /* Wrapper for page content to push down footer */
        #wrap {
            min-height: 100%;
            height: auto !important;
            height: 100%;
            /* Negative indent footer by its height */
            margin: 0 auto -60px;
            /* Pad bottom by footer height */
            padding: 0 0 60px;
        }

        /* Set the fixed height of the footer here */
        #footer {
            height: 60px;
            background-color: #f5f5f5;
            margin-top: 10px;
        }

        .container .credit {
            margin: 20px 0;
        }

        #footer > .container {
            padding-left: 15px;
            padding-right: 15px;
        }

         #footer .row {
            margin-top:  15px;
        }


        /*mark visited notification background as white */
        .whitewell {
            background: rgba(255,255,255,0.4);
        }

        #lessbottommargin {
            margin-bottom: 2px;
            cursor: pointer;
        }

        #nomarginhr {
            margin-top: 0px;
            margin-bottom: 0px;
        }

        #notification_li {
            position: relative;
        }

        #notificationContainer {
            background-color: #fff;
            border: 1px solid rgba(100, 100, 100, .4);
            -webkit-box-shadow: 0 3px 8px rgba(0, 0, 0, .25);
            overflow: visible;
            position: absolute;
            top: 50px;
            margin-left: -176px;
            width: 400px;
            z-index: -1;
            display: none;
            /*Enable this after jquery implementation;*/
        }

            /*Popup Arrow*/
            #notificationContainer:before {
                content: '';
                display: block;
                position: absolute;
                width: 0;
                height: 0;
                color: transparent;
                border: 10px solid black;
                border-color: transparent transparent white;
                margin-top: -20px;
                margin-left: 188px;
            }

        #notificationTitle {
            font-weight: bold;
            padding: 8px;
            font-size: 13px;
            background-color: #ffffff;
            position: fixed;
            z-index: 1000;
            width: 384px;
            border-bottom: 1px solid #dddddd;
        }

        #notificationsBody {
            padding: 33px 0px 0px 0px !important;
            min-height: 300px;
            max-height: 350px;
            overflow: auto;
            margin-top: 0px;
        }

        #notificationFooter {
            background-color: #e9eaed;
            text-align: center;
            font-weight: bold;
            padding: 8px;
            font-size: 12px;
            border-top: 1px solid #dddddd;
        }

        #notification_count {
            padding: 3px 7px 3px 7px;
            background: #cc0000;
            color: #ffffff;
            font-weight: bold;
            margin-left: 77px;
            border-radius: 9px;
            -moz-border-radius: 9px;
            -webkit-border-radius: 9px;
            position: absolute;
            font-size: 11px;
        }
        
        /* SIDEBAR */
        .sidebar-container
        {
            box-shadow: 0 2px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            border-radius: 4px;
            transition: background,.3s,ease-in-out,.3s;
            border-radius: 4px;
            margin-bottom: 20px;
        }
        
        .sidebar-header
        {
            margin: 0;
            color: #90A4AE;
            background: rgba(176,190,197,.16);
            margin-bottom: 15px;
            padding: 13px 15px;
        }
        
        .sidebar-content
        {
            background: #fff;
            padding-top: 10px;
            overflow: auto;
        }
    </style>
</head>
<body>
    <div id="wrap">
        <div class="navbar navbar-default navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @Html.ActionLink("ShibpurHub", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        @if (User.Identity.IsAuthenticated)
                        {
                            @*<li>@Html.ActionLink("Profile", "Profile", "Account")</li>*@

                        <!-- Notification center-->
                            <li id="notification_li">
                                <span id="notification_count" style="display:none;"></span>
                                <a href="#" id="notificationLink"><span class="glyphicon glyphicon-bell"></span>  Notifications</a>

                                <div id="notificationContainer">
                                    <div id="notificationTitle">Notifications</div>
                                    <div id="notificationsBody" class="notifications"></div>
                                    <div id="notificationFooter"><a href="/notifications">See All</a></div>
                                </div>
                            </li>
                        }
                        <li>@Html.ActionLink("Questions", "Index", "feed")</li>
                        <li>@Html.ActionLink("Tags", "Index", "tags")</li>
                        <li>@Html.ActionLink("Users", "Index", "users")</li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li>
                                <a href="/feed/startdiscussion" id="notificationLink"><span class="glyphicon glyphicon-question-sign"></span>  Ask Question</a>
                            </li>
                        }
                    </ul>

                    @Html.Partial("_LoginPartial")
                </div>
            </div>
        </div>
        <div class="container">
            @RenderSection("emailconfirmalert", required: false)
        </div>

        @RenderSection("jambo", required: false)
        <div class="container body-content">
            @RenderBody()
        </div>
        @RenderSection("scripts", required: false)
    </div>
    <div id="footer">
        <div class="container">
            <div class="row">
                <div class="col-xs-8">
                    <ul class="list-unstyled list-inline pull-left">
                        <li><a href="/about">About Us</a></li>
                        <li><a href="/about/contact">Contact Us</a></li>
                        <li><a href="/legal/tos">Terms of Service</a></li>
                        <li><a href="/legal/privacy">Privacy</a></li>
                    </ul>
                </div>
                <p class="text-muted pull-right">&copy; @DateTime.Now.Year - ShibpurHub</p>
            </div>
        </div>
    </div>
    <div class="scroll-top-wrapper ">
        <span class="scroll-top-inner">
            <i class="fa fa-2x fa-arrow-circle-up"></i>
        </span>
    </div>
</body>
</html>
