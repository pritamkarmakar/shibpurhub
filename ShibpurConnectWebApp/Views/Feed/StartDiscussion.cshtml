@using ShibpurConnectWebApp.Models.WebAPI
@model Questions
@{
    ViewBag.Title = "New Question";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        jQuery.support.cors = true;
        var SERVER = "/api/";
        //$('#select_categories').tokenInput("/api/categories/GetCategories");

        scAjax({
            "url": "categories/GetCategories",
            "success": function (result) {
                if (!result) {
                    return;
                }

                var categories = result;
                $(categories).each(function (i, category) {
                    var option = $('<option>').text(category.categoryName).val(category.categoryId);
                    $('#select_categories').append(option);
                });
            }
        });

        $('#btn_Save').click(function () {
            // hide the error div
            $('#errormessage').empty();
            $('#errormessage').hide();

            // disable the save button
            $('#btn_Save').prop('disabled', true);

            // add spinner animation in the save button and change the text to 'Saving..'
            $('#btn_Save > i').addClass('fa fa-circle-o-notch fa-spin');
            $('#btn_Save > span').text(' Saving...');

            var question = $('#txt_question').val();
            var description = $('#txtarea_description').val();
            var categories = $('#select_categories').val();
            if (!question || !description || !categories) {
                Command: toastr["error"]("All form fields are mandatory")
                // enable the button 
                $('#btn_Save').prop('disabled', false);
                // remove the loading class from save button
                $('#btn_Save > i').removeClass('fa fa-circle-o-notch fa-spin');
                $('#btn_Save > span').text('Save');
                return;
            }

            var userDetails = localStorage.getItem("SC_Session_UserDetails");
            if (!userDetails) {
                //TO-DO: Handle if userdetail is not available in Session Storage
                return;
            }

            var userInfo = $.parseJSON(userDetails);

            var arrCategories = categories.split(',');
            //$.each(categories.split(','), function () {
            //    arrCategories.push($(this).text());
            //});

            var userID = $('#hdnUserID').val();
            var data = {
                "Title": question,
                "Description": description,
                "HasAnswered": 0,
                "UserEmail": userInfo.email,
                "DisplayName": userInfo.firstName + " " + userInfo.lastName,
                "Categories": arrCategories,
                "UserProfileImage": userInfo.profileImageURL
            };
            //debugger;


            scAjax({
                "url": "questions/PostQuestions",
                "type": "POST",
                "data": JSON.stringify(data, null, 2),
                "success": function (result) {
                    if (!result) {
                        return;
                    }

                    document.location.href = "/Feed/Details/" + result.questionId;
                    logActivity(1, result.questionId);
                },
                "error": function (err) {
                    var errorMessage = "";
                    // parse the error json
                    var errorresponse = jQuery.parseJSON(err.responseText);
                    jQuery.each(errorresponse.modelState, function (i, val) {
                        errorMessage += "<li>" + val + "</li>";
                    });

                    Command: toastr["error"]("<ul>" + errorMessage + "</ul>")
                    // parse the error json
                    var errorresponse = jQuery.parseJSON(err.responseText);

                    // enable the button 
                    $('#btn_Save').prop('disabled', false);

                    // remove the loading class from save button
                    $('#btn_Save > i').removeClass('fa fa-circle-o-notch fa-spin');
                    $('#btn_Save > span').text('Save');

                    //$('#errormessage').show();
                    //if (errorresponse.modelState['question.Title'] != null)
                    //    $('#errormessage').append("<p>"+errorresponse.modelState['question.Title'][0] + "</p>");
                    //if (errorresponse.modelState['question.Description'] != null)
                    //    $('#errormessage').append(errorresponse.modelState['question.Description'][0]);
                    //$('#errormessage').append(errorresponse.modelState['question.Description'][0] + "<br/>" + errorresponse.modelState['question.Title'][0]);
                    //alert(err.responseText);
                }
            });
            return false;
        });
    });
</script>



<h4>Details</h4>
<hr />
<div class="panel-body">
    
    <form action="#" class="form-horizontal" method="post" role="form">
        <div class="row">
            @*<div class="col-md-2"></div>*@
            <div class="alert alert-danger alert-dismissible col-md-6 col-md-offset-2" role="alert" style="display:none" id="errormessage">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>Error!</strong>
            </div>
            </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="Question">Question</label>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-12">
                        <input class="form-control" id="txt_question" placeholder="What is your question?" type="text" required>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="DetailedText">Description</label>
            <div class="col-md-6">
                <textarea class="form-control" id="txtarea_description" placeholder="Description" rows="3" required></textarea>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="Categories">Categories</label>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-12">
                        <input class="form-control" id="select_categories" placeholder="Add categories (,) separeted" type="text" required>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="form-group">
            <label class="col-md-2 control-label" for="Categories">Categories</label>
            <div class="col-md-6">

                <div class="form-group">
                    <div class="col-md-12">
                        <select class="form-control" id="select_categories" multiple></select>
                    </div>
                </div>
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="button" class="btn btn-primary" id="btn_Save" value="Save"><i></i><span>Save</span> </input>*@

                <button type="submit" id="btn_Save" class="btn btn-primary">
                    <i></i><span>Save</span>
                </button>
            </div>
        </div>
    </form>
</div>

