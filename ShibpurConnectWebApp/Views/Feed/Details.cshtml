@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model ShibpurConnectWebApp.Models.DiscussionThread
@{
    ViewBag.Title = "Feed Details";
}

<style type="text/css">
    /*CSS form tags*/
     .tags {
        margin-top: 2%;
    }
     .post-tag {
        color: #566e76;
        background: #f7fdff;
        border: 1px solid #c0d4db;
        padding: .4em .5em;
        border-radius: 15px;
        text-align: center;
        font-size: 11px;
        line-height: 1;
        color: #3e6d8e;
        background-color: #e4edf4;
        margin: 2px 2px 2px 0;
        text-decoration: none;
        font-size: 12px;
        white-space: nowrap;
        display: inline-block;
        border-radius: 0;
        border: 1px solid #e4edf4;
    }

     /*CSS form the toolbas to create question*/
    #toolbar
    {
        height: 70px;
        margin-top: 40px;
    }
    .block {
        border-top: 1px solid #d3d4cf;
        padding-top: 20px;
        margin-bottom: 29px;
    }
    .column {
        float: left;
        width: calc(85% - 20px);
        margin-right: 20px;
    }
    div.detail
    {
        min-height: 65px;
        
    }
    div.user {
        width: 60px;
        text-align: center;
        height: 60px;
        display: block;
        float: left;
    }

    div.user a.mark-answer
    {   
        margin-top: 6px;
        padding: 3px 6px;
    }

    .avatar {
        border-radius: 50%;
        width: 40px;
        height: 40px;
        background-color: #CCCCCA;
        cursor: pointer;
        -webkit-transition: opacity ease-in-out .25s 0s;
        -moz-transition: opacity ease-in-out .25s 0s;
        -o-transition: opacity ease-in-out .25s 0s;
        transition: opacity ease-in-out .25s 0s;
    }

    .comment-form textarea {
        /*-webkit-appearance: none;
        line-height: 20px;
        background-color: #f9faf7;
        border: 1px solid #D9DAD6;
        padding: 9px 13px;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        resize: none;
        height: 40px;*/
        border-radius: 5px;
    }

    .button, input[type=submit] {
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        padding-left: 22px;
        padding-right: 22px;
        height: 40px;
        min-width: 104px;
        border-radius: 5px;
        border: 0;
        font-weight: 700;
        color: #fcfcfa;
        background-color: #7ab21e;
    }
    .comment-form.active form textarea {
        resize: vertical;
        margin-bottom: 11px;
        min-height: 50px;
        height: 150px;
        -webkit-transition: all cubic-bezier(.2,.04,.02,1.49) .35s 0s;
        -moz-transition: all cubic-bezier(.2,.04,.02,1.49) .35s 0s;
        -o-transition: all cubic-bezier(.2,.04,.02,1.49) .35s 0s;
        transition: all cubic-bezier(.2,.04,.02,1.49) .35s 0s;
    }
    .comment-form.active input[type=submit] {
        top: inherit;
        right: 0;
        bottom: 0;
    }
    #answerlist
    {
        list-style-type: none;
    }
    li.answer
    {
        padding-bottom: 15px;
        padding-top: 15px;
        border-bottom: 1px solid #e0e0e0;
    }
    li.answer:nth-last-child(2)
    {
        border:none;
    }
    #answerlist li:last-child {
        padding-bottom: 0;
    }

    li.answer div.stat
    {
        float: right !important;

    }
    div.stat
    {
        color: #808080;
        font-size: 9pt;
    }

    div.stat span
    {
        display: inline-block;
        width: 100%;
    }

    div.answer-links
    {
        margin-left: 60px;
        font-size: 10pt;
    }

    span.link
    {
        margin-right: 20px;
    }

    span.link a{
        color:#999;
    }

    span.link a.upvote-anchor {
        box-sizing: border-box;
        transition: all ease-in-out 100ms;
        border-radius: 3px;
        box-shadow: 0 1px 1px 0 rgba(200,200,200,0.2);
        display: inline-block;
        font-weight: 500;
        outline: 0;
        padding: 3px 7px 4px 7px;
        text-align: center;
        text-decoration: none;
        cursor: pointer;
        background: #e4edf4;
        color: #3e6d8e;
        border: 1px solid #bbcadc;
    }

    .upvote-anchor span.count {
        background: 0;
        padding: 0;
        margin: 0;
        margin-left: 6px;
        padding-left: 6px;
        transition: all ease-in-out 100ms;
        position: relative;
        border-radius: 0 3px 3px 0;
        -webkit-font-smoothing: antialiased;
        color: #3e6d8e;
        font-weight: bold;
        min-width: 10px;
        text-align: center;
        display: inline-block;
        float: none;
        border-left: 1px solid #3e6d8e;
    }

    div.answer-comments {
        font-size: 13px;
        margin-left: 75px;
        margin-top: 8px;
        background: #f6f6f6;
        border: 1px solid #e2e2e2;
        border-radius: 2px;
    }
    div.comment-box
    {
        overflow: auto;
        padding: 5px 0;
    }
    a.commentor
    {
        float:left;
    }
    
     /* CSS for Ask to Answer*/
     hr#bigseparator {
        border-top: 3px double white;
        color: #fff;
        background-color: #fff;
        margin: 8px 0 8px 0;
        width:90%;
    } 
    hr#smallseparator {
        border-top: 1px double white;
        color: #fff;
        background-color: #fff;
        margin: 8px 0 8px 0;
        width:90%;
    }
    .wantedanswersuggestion{
        float:left;
        width: 90%;
        margin-bottom: 12px;
    }
    .upvote-span.disabled a.upvote-anchor, .upvote-span.disabled span{
        color: #9D9C9C;
        background-color: #DBD7D7;
    }
    .no-right-padding
    {
        padding-right:0;
    }

    .comment-list {
        border-bottom: 1px solid #e2e2e2;
        padding: 8px;
        margin-right: 20px;
    }

    .comment-date, .comment-user
    {
        font-size: 9pt;
    }

    .comment-user
    {
        font-weight: bold;
        padding-right: 10px;
    }
    .comment-text {
        display: inline-block;
        width: 100%;
        padding: 0 10px;
        word-wrap: break-word;
    }
    
</style>

<script src="http://waxolunist.github.io/bootstrap3-wysihtml5-bower/components/wysihtml5x/dist/wysihtml5x-toolbar.min.js"></script>
<script src="http://waxolunist.github.io/bootstrap3-wysihtml5-bower/components/handlebars/handlebars.runtime.min.js"></script>
<script src="http://waxolunist.github.io/bootstrap3-wysihtml5-bower/dist/bootstrap3-wysihtml5.min.js"></script>
<script src="~/Scripts/quill.min.js"></script>

<link rel="stylesheet" type="text/css" href="http://waxolunist.github.io/bootstrap3-wysihtml5-bower/components/components-font-awesome/css/font-awesome.min.css" />
<link rel="stylesheet" type="text/css" href="http://waxolunist.github.io/bootstrap3-wysihtml5-bower/dist/bootstrap3-wysihtml5.min.css" />
@*<link rel="stylesheet" type="text/css" href="~/Content/quill.base.css" />*@
<link rel="stylesheet" type="text/css" href="~/Content/quill.snow.css" />

<script type="text/javascript">
    var questionID = '';
    var askedBy = '';
    var advancedEditor;
    $(document).ready(function () {

         advancedEditor = new Quill('.text-wrapper .editor-container', {
            modules: {
                'authorship': {
                    authorId: 'advanced',
                    enabled: true
                },
                'toolbar': {
                    container: '.text-wrapper .toolbar-container'
                },
                'link-tooltip': true,
                'image-tooltip': true,
                'multi-cursor': true
            },
            styles: false,
            theme: 'snow'
        });


        jQuery.support.cors = true;
        var SERVER = "/api/";
        var url = window.location.href;
        var splitArr = url.split('/');
        questionID = splitArr[splitArr.length - 1];

        scAjax({
            "url": "questions/GetQuestion",
            "data": { "questionId": questionID },            
            "success": function (result) {
                if (!result) {
                    return;
                }
                //debugger;
                var question = result;

                $('.header h2').text(question.title);
                $('.description').text(question.description);
                askedBy = question.userEmail;
                getAnswers();
                // attach the categories
                $(question.categories).each(function (i, category) {
                    var tagAnchor = $('<a>').addClass('post-tag').text(category).attr('href', "/Feed/FeedByCategory/" + category);
                    $('div.tags').append(tagAnchor);
                });

                // show the suggested user who can answer this question using elastic search
                scAjax({
                    "url": "questions/GetSuggestedUserProfiles",
                    "data": { "categories": result.categories.toString() },
                    "success": function (result) {
                        if (!result) {
                            return;
                        }
                       
                        if (result.length == 0) {
                            $('#userToAnswer').append("<span>Sorry no matching profile available</span>");
                            // hide the loading message
                            $('#loadingasktoanswer').hide();
                        }
                        else {
                            // uodate the div with the user data received from the API
                            jQuery.each(result, function (i, val) {
                                // check if this user already requested to answer this question, if that true then keep the 'Ask' button disabled
                                scAjax({
                                    "url": "asktoanswer/GetAskToAnswer",
                                    "data": { "questionId": questionID, "userId": val.userInfo.userId },
                                    "success": function (result) {
                                        //get the response rate for each user
                                        var responseRate;
                                        scAjax({
                                            "url": "asktoanswer/GetResponseRate",
                                            "data": { "userId": val.userInfo.userId },
                                            "success": function (rRate) {

                                                responseRate = rRate;
                                                if (result == null) {
                                                    $('#userToAnswer').append("<div class='wantedanswersuggestion'><div class='profileimage' style='float:left;'><img class='avatar' width='60' height='60' src='/Content/images/profile-image.jpg'></img></div><div class='userinfo' style='float:left;'><span class='name'><a class='userName' style='margin-left:15px;' href='/Account/Profile?useremail=" + val.userInfo.email + "'>" + val.userInfo.firstName + " " + val.userInfo.lastName + "</a></span><br/><span style='margin-left:15px;font-size:12px'>Response rate: " + responseRate + "</span></div><a id='askmeto' data-id='" + val.userInfo.userId + "' data-email='" + val.userInfo.email + "' class='btn btn-primary btn-sm' style='float:right;' onclick='SendNotification(this)'>Ask</a></div><hr id='smallseparator'/>")
                                                }
                                                else
                                                    $('#userToAnswer').append("<div class='wantedanswersuggestion'><div class='profileimage' style='float:left;'><img class='avatar' width='60' height='60' src='/Content/images/profile-image.jpg'></img></div><div class='userinfo' style='float:left;'><span class='name'><a class='userName' style='margin-left:15px;' href='/Account/Profile?useremail=" + val.userInfo.email + "'>" + val.userInfo.firstName + " " + val.userInfo.lastName + "</a></span><br/><span style='margin-left:15px;font-size:12px'>Response rate: " + responseRate + "</span></div><a id='askmeto' data-id='" + val.userInfo.userId + "' data-email='" + val.userInfo.email + "' class='btn btn-primary btn-sm' disabled='disabled' style='float:right;' onclick='SendNotification(this)'>Already Asked</a></div><hr id='smallseparator'/>")

                                                // hide the loading message
                                                $('#loadingasktoanswer').hide();
                                            }
                                        });
                                    }
                                });

                            });
                        }
                    },
                    "error": function (XMLHttpRequest, textStatus, errorThrown) {
                        var errorText = XMLHttpRequest.responseText.replace('{"message":"', " ").replace('"}', " ");
                        //$("#errorLabel").text(errorText);
                        $('#failuremessage').css('display', 'block');
                        $('#failuremessage').text(errorText);

                        // hide the loading message
                        $('#loadingasktoanswer').hide();
                    }
                });
            }
        });
        
        scAjax({
            "url": "questions/IncrementViewCount",
            "type": "POST",
            "data": JSON.stringify({ "QuestionID": questionID }),
            "success": function (result) {
            }
        });

        //getAnswers();

        $('.btn-submit-answer').click(function () {
            saveAnswer();            
        });

        $('textarea').focus(function () {
            var textarea = $(this);
            $('.comment-form').addClass('active');
            var parentDiv = $(textarea).parent();
            $(parentDiv).removeClass("col-md-8").addClass("col-md-12");
            //$(parentDiv).next().addClass("col-md-offset-9");
        });

        // add the rich text answer plugin
        $('.textarea').wysihtml5({
            toolbar: {
                "image": false
            }
        });
    });

    // function to send notification to the specific user
    function SendNotification(elm) {
        // retrieve current logged-in user details
        var userDetails = localStorage.getItem("SC_Session_UserDetails");
        if (!userDetails) {
            //TO-DO: Handle if userdetail is not available in Session Storage
            return;
        }
        var userInfo = $.parseJSON(userDetails);

        // send email notification
        var emaildata = {
            "Body": "<a href='" + window.location.origin + "/Account/Profile?useremail=" + userInfo.email + "'>" + userInfo.firstName + " " + userInfo.lastName + "</a>" + " requested you to answer this <a href='" + window.location.href + "'>question</a>",
            "EmailAddress": elm.attributes["data-email"].value,
            "Subject": "Can you answer this question?"
        };
        
        scAjax({
            "url": "emails/sendemail",
            "type": "POST",
            "data": JSON.stringify(emaildata, null, 2),
            "success": function (result) {                
            }
        });

        // save this request in the Notification collection
        var data = {
            "UserId": elm.attributes["data-id"].value,
            "NotificationContent": "<div><div class='profileimage' style='float:left;margin-right:8px;margin-left:8px;'><img class='avatar' width='60' height='60' src='/Content/images/profile-image.jpg'></img></div><div id='askedby'><a href='" + window.location.origin + "/Account/Profile?useremail=" + userInfo.email + "'>" + userInfo.firstName + " " + userInfo.lastName + "</a> requested you to answer this <a href='" + window.location.href + "'>question</a></div></div>",
            "NotificationType": "AskToAnswer"
        };        

        scAjax({
            "url": "notifications/PostNotification",
            "type": "POST",
            "data": JSON.stringify(data, null, 2),
            "success": function (result) {
                // disable the Ask button and change the test to Asked
                $(elm).text("Asked");
                $(elm).attr("disabled", "disabled");
            }
        });

        // save this ask to answer record in database collection
        var asktoanswer = {
            "AskedTo": elm.attributes["data-id"].value,
            "AskedBy": userInfo.userId,
            "QuestionId": questionID
        };
        scAjax({
            "url": "asktoanswer/postasktoanswer",
            "type": "POST",
            "data": JSON.stringify(asktoanswer, null, 2),
            "success": function (result) {
                
            }
        });



    }

     function getMonth(month) {
        var monthArray = {
            "0": "Jan",
            "1": "Feb",
            "2": "Mar",
            "3": "Apr",
            "4": "May",
            "5": "Jun",
            "6": "Jul",
            "7": "Aug",
            "8": "Sep",
            "9": "Oct",
            "10": "Nov",
            "11": "Dec",
        }

        return monthArray[month];
    }

    function saveAnswer() {
        
        jQuery.support.cors = true;
        var userDetails = localStorage.getItem("SC_Session_UserDetails");
        
        if (!userDetails) {
            //TO-DO: Handle if userdetail is not available in Session Storage
            return;
        }
        //var answer = $('.textarea')[0].value;
        var answer = advancedEditor.getHTML();
        if (!answer || answer == "")
        {
            return;
        }
        var userInfo = $.parseJSON(userDetails);        

        //var SERVER = "/api/";
        var userid = userInfo.userId;

        //var token = localStorage.getItem("TOKEN") || "PTLp2jwqIgLZmDBqjtADmHdtHmKpEmy-KtrdrocIBR5dz2k0uHNdgLdeqm6bFODmjUxsgNkcr0LI2UGaT6xve1gxPaHjLAyqneD69pKNIVwpo6mGtiaemzfJFVgV_FS_Q6TzA5InNb16tGCu3VNoYdqQEJu-jLiX3uN3FNAjAUKElpYZbjk5fYZ7ZKZ3T0w7utu0rbNI2BWuxo4HADZ4wrvI1J_-8qnd4Sq1kYWBkdPFeqDO2HQ8Io-IiKSDmnFS";
        var answerObject = { "AnswerText": answer, "QuestionId": questionID, "UserId": userid, "DisplayName": userInfo.firstName, "UserEmail": userInfo.email };
        
        advancedEditor.setHTML("");
        scAjax({
            "url": "Answers/PostAnswer",
            "type": "POST",
            "data": JSON.stringify(answerObject),
            "success": function (result, data) {
                if (!result) {
                    return;
                }

                //update the asktoanswer collection if this user has been asked to answer this question
                scAjax({
                    "url": "asktoanswer/GetAskToAnswer",
                    "data": { "questionId": questionID, "userId": userInfo.userId },
                    "success": function (result) {
                        if (result != null) {
                            if (result.hasAnswered == false) {
                                // mark that the user has answered this question
                                var asktoanswer = {
                                    "Id": result.id,
                                    "AskedTo": userInfo.userId,
                                    "AskedBy": result.askedBy,
                                    "QuestionId": result.questionId,
                                    "HasAnswered": true,
                                    "AskedOnUtc": result.askedOnUtc
                                };
                                scAjax({
                                    "url": "asktoanswer/postasktoanswer",
                                    "type": "POST",
                                    "data": JSON.stringify(asktoanswer, null, 2),
                                    "success": function (result) {

                                    }
                                });
                            }
                        }
                    }
                });
                
                var utcDate = new Date(result.postedOnUtc);
                var dateString = getMonth(utcDate.getMonth().toString()) + " " + utcDate.getDate() + " '" + utcDate.getFullYear().toString().substr(2, 2);

                var answerBlock = $('#answerlist li.answer.hide').clone();
                $(answerBlock).removeClass('hide');
                $(answerBlock).find('.text').html(result.answerText);
                $(answerBlock).find('.userName').text(result.displayName);
                $(answerBlock).find('.date').text(dateString);
                $(answerBlock).find('.upvote-span').addClass('disabled');

                var userNameAnchor = $(answerBlock).find('div.user a.userName');
                $(userNameAnchor).text(result.displayName);
                if (result.userEmail != null) {
                    var url = $(userNameAnchor).attr('href') + '?userEmail=' + result.userEmail;
                    $(userNameAnchor).attr('href', url);
                }

                $('#answerlist').prepend(answerBlock);
                $('.textarea').val('');
                logActivity(2, result.answerId);
            },
            "error": function (XMLHttpRequest, textStatus, errorThrown) {
                var errorText = XMLHttpRequest.responseText.replace('{"message":"', " ").replace('"}', " ");
                $("#errorLabel").text(errorText);
            }
        });
        
    }

    function getComments(answerBlock)
    {
        if (!answerBlock)
        {
            return;
        }
        var answerId = $(answerBlock).attr('data-answerid');

        scAjax({
            "url": "comments/GetCommentCountForAnswer",
            "data": { "answerId": answerId },
            "success": function (result) {
                if (!result || result == "0") {
                    return;
                }

                $(answerBlock).find('.comment-count').text(" (" + result + ")").attr('data-commentcount', result);

                scAjax({
                    "url": "comments/GetCommentsForAnswer",
                    "data": { "answerId": answerId },
                    "success": function (result) {
                        if (!result) {
                            return;
                        }
                        
                        $(result).each(function (i, e) {
                            
                            var commentBlock = $(answerBlock).find('.answer-comments .comment-list.hide').clone();
                            $(commentBlock).removeClass('hide');                            
                            $(commentBlock).find('.comment-text').text(e.description);
                            $(commentBlock).find('.comment-date').text(getDateFormatted(e.postedOnUtc));
                            $(commentBlock).find('.comment-user').text(e.displayName);
                            $(answerBlock).find('.answer-comments').prepend(commentBlock);
                        });
                    }
                });
            }
        });
    }

    function getAnswers()
    {
        var isAskedByMe = false;
        var userDetails = localStorage.getItem("SC_Session_UserDetails");
        if (userDetails) {
            var userInfo = $.parseJSON(userDetails);
            isAskedByMe = askedBy == userInfo.email;
        }
        

        jQuery.support.cors = true;
        var SERVER = "/api/";

        scAjax({
            "url": "answers/GetAnswers",
            "data": { "questionId": questionID },
            "success": function (result) {
                if (!result) {
                    return;
                }

                var save = $('#answerlist .answer.hide').detach();
                $('#answerlist').empty().append(save);

                $(result).each(function (index, answer) {
                    var answerBlock = $('#answerlist li.answer.hide').clone();
                    $(answerBlock).removeClass('hide').attr('data-answerid', answer.answerId);
                    $(answerBlock).find('.text').html(answer.answerText);
                    $(answerBlock).find('.upvote-anchor .count').text(answer.upVoteCount);
                    if (answer.upvotedBy && answer.upvotedBy.indexOf(userInfo.email) >= 0) {
                        $(answerBlock).find('.upvote-span').addClass('disabled');
                    }
                    //$(answerBlock).find('.userName').text(answer.displayName);

                    var userNameAnchor = $(answerBlock).find('div.user a.userName');
                    $(userNameAnchor).text(answer.displayName);
                    if (answer.userEmail != null) {
                        var url = $(userNameAnchor).attr('href') + '?userEmail=' + answer.userEmail;
                        $(userNameAnchor).attr('href', url);
                    }

                    var utcDate = new Date(answer.postedOnUtc);
                    var dateString = getMonth(utcDate.getMonth().toString()) + " " + utcDate.getDate() + " '" + utcDate.getFullYear().toString().substr(2, 2);
                    $(answerBlock).find('.date').text(dateString);

                    if (answer.markedAsAnswer) {
                        $(answerBlock).find('.mark-answer').removeClass('hide').addClass('btn-success');
                    }

                    $('#answerlist').prepend(answerBlock);
                    if (isAskedByMe) {
                        var markAnswer = $(answerBlock).find('.mark-answer');
                        $(markAnswer).removeClass('hide').click(function () {
                            var span = $(this);
                            if ($(span).hasClass('btn-success')) {
                                return;
                            }

                            var answerId = $(span).closest('li.answer').attr('data-answerid');
                            var answers = [];
                            answers.push({ "AnswerID": answerId, "MarkedAsAnswer": true });
                            $('.mark-answer.btn-success').each(function (i, e) {
                                $(e).removeClass('btn-success');
                                var oldAnswerId = $(e).closest('li.answer').attr('data-answerid');
                                answers.push({ "AnswerID": oldAnswerId, "MarkedAsAnswer": false });
                            });

                            $(span).addClass('btn-success');
                            logActivity(5, answerId);
                            
                            scAjax({
                                "url": "answers/UpdateMarkAsAnswer",
                                "type": "POST",
                                "data": JSON.stringify(answers)
                            });
                        });
                    }

                    getComments(answerBlock);
                });

                $('.comment-anchor').click(function (event) {
                    event.preventDefault();
                    var anchor = $(this);
                    var commentBox = $(anchor).closest('.answer-links').siblings('.answer-comments');
                    $(commentBox).removeClass('hide');
                });

                $('.btn-save-comment').click(function () {
                    var button = $(this);
                    var commentBox = $(button).closest('.comment-box');
                    var input = $(commentBox).find('.txt_comment');
                    var comment = $(input).val();
                    if(!comment)
                    {
                        return;
                    }

                    var userDetails = localStorage.getItem("SC_Session_UserDetails");
                    if (!userDetails) {
                        //TO-DO: Handle if userdetail is not available in Session Storage
                        return;
                    }
                    var userInfo = $.parseJSON(userDetails);
                    var userId = userInfo.userId;

                    var answerId = $(button).closest('li.answer').attr('data-answerid');
                    var data = { "Description": comment, "UserId": userId, "DisplayName": userInfo.firstName, "AnswerId": answerId };
                    $(input).val('');
                    scAjax({
                        "url": "comments/AddComment",
                        "type": "POST",
                        "data": JSON.stringify(data, null, 2),
                        "success": function (result) {
                            var answerBlock = $(button).closest('li.answer');
                            var commentBlock = $(answerBlock).find('.answer-comments .comment-list.hide').clone();
                            $(commentBlock).removeClass('hide');
                            $(commentBlock).find('.comment-text').text(comment);
                            $(commentBlock).find('.comment-date').text(getDateFormatted(result.postedOnUtc));
                            $(commentBlock).find('.comment-user').text(result.displayName);
                            $(answerBlock).find('.answer-comments').prepend(commentBlock);

                            var spanCount = $(answerBlock).find('.comment-count');
                            var count = $(spanCount).text() == '' ? 1 : parseInt($(spanCount).attr('data-commentcount')) + 1;
                            $(spanCount).text(" (" + count + ")");
                        }
                    });
                });

                $('.upvote-anchor').click(function (event) {
                    event.preventDefault();
                    var anchor = $(this);
                    if ($(anchor).parent().hasClass('disabled')) {
                        return false;
                    }
                    var answerId = $(anchor).closest('li.answer').attr('data-answerid');
                    logActivity(3, answerId);                    

                    scAjax({
                        "url": "answers/UpdateUpVoteCount",
                        "type": "POST",
                        "data": JSON.stringify({
                            "AnswerID": answerId, "UserEmail": userInfo.email
                        }),
                        "success": function (result) {
                            $(anchor).find('.count').text(result);
                            $(anchor).parent().addClass('disabled');
                        }
                    });
                });

                
            }
        });        
    }
</script>



<div class="container">       
    <div class="col-md-8">
        <div class="header col-md-12">
            <h2 style="font-size:22px;"></h2><hr />
        </div>
    </div>
    <div class="col-md-8">
        <div class="row">
            <div id="details">
                <div class="col-md-10">
                    <div class="description col-md-12">
                    </div>
                    <div class="tags col-md-10">
                    </div>
                    <div class="stat col-md-2">
                        <span class="date"></span>
                        <span class="answercount"></span>
                    </div>
                </div>
            </div>           

            <br/><br/>
            <div id="moduleanswers" class="col-md-12">
                <h4>Answers:</h4>
                <ul id="answerlist">

                    @*<div id="answerdiv">*@
                    <li class="hide answer col-md-12">
                        <div class="user">
                            <img class="avatar" width="40" height="40" src="/Content/images/profile-image.jpg">
                            <a class="userName" href="\Account\Profile"></a>
                            <a class="btn btn-default btn-sm mark-answer hide" title="Mark as answer">
                                <i class="fa fa-check-square-o fa-lg"></i>
                            </a>
                        </div>
                        <div class="detail col-md-10">
                            <div class="text">
                            </div>
                            <div class="stat col-md-3">
                                <span class="date"></span>
                            </div>
                        </div>
                        <div class="answer-links col-md-10">
                            <span class="link upvote-span">
                                <a class="upvote-anchor" href="#">
                                    Upvote
                                    <span class="count">0</span>
                                </a>
                            </span>
                            @*<span class="link">
                                <a class="downvote-anchor" href="#">Downvote</a>
                            </span>*@
                            <span class="link comment-span">
                                <a class="comment-anchor" href="#">Comment</a>
                                <span class="comment-count"></span>
                            </span>
                        </div>

                        <div class="answer-comments hide col-md-10 no-right-padding">
                            <div class="comment-list hide">
                                <span class="comment-user"></span>
                                <span class="comment-date"></span>
                                <span class="comment-text"></span>
                            </div>
                            <div class="comment-box">
                                <a class="commentor" href="#">
                                    <img height="25" width="25" src="/Content/images/profile-image.jpg">
                                </a>
                                <div class="col-md-9 no-right-padding">
                                    <input class="form-control input-sm txt_comment"  placeholder="Add comment" type="text" required>
                                </div>
                                <div class="col-md-2">
                                    <input type="button" class="btn btn-sm btn-primary btn-save-comment" id="btn_Save" value="Comment">
                                </div>
                            </div>
                        </div>
                    </li>
                    @*</div>*@

                </ul>
            </div>

            <div class="wirte-answer col-md-12" style="margin-top:40px">
                @*<textarea class="textarea" placeholder="Write your answer" style="width: 100%; height: 150px; font-size: 14px; line-height: 18px; padding: 10px 10px 10px 10px"></textarea>*@
                <div class="text-wrapper col-md-12">
                    <div class="toolbar-container">
                        <span class="ql-format-group">
                            <select title="Size" class="ql-size">
                                <option value="10px">Small</option>
                                <option value="13px" selected>Normal</option>
                                <option value="18px">Large</option>
                                <option value="32px">Huge</option>
                            </select>
                        </span><span class="ql-format-group"><span title="Bold" class="ql-format-button ql-bold"></span><span class="ql-format-separator"></span><span title="Italic" class="ql-format-button ql-italic"></span><span class="ql-format-separator"></span><span title="Underline" class="ql-format-button ql-underline"></span></span><span class="ql-format-group">
                            <select title="Text Color" class="ql-color">
                                <option value="rgb(0, 0, 0)" selected></option>
                                <option value="rgb(230, 0, 0)"></option>
                                <option value="rgb(255, 153, 0)"></option>
                                <option value="rgb(255, 255, 0)"></option>
                                <option value="rgb(0, 138, 0)"></option>
                                <option value="rgb(0, 102, 204)"></option>
                                <option value="rgb(153, 51, 255)"></option>
                                <option value="rgb(255, 255, 255)"></option>
                                <option value="rgb(250, 204, 204)"></option>
                                <option value="rgb(255, 235, 204)"></option>
                                <option value="rgb(255, 255, 204)"></option>
                                <option value="rgb(204, 232, 204)"></option>
                                <option value="rgb(204, 224, 245)"></option>
                                <option value="rgb(235, 214, 255)"></option>
                                <option value="rgb(187, 187, 187)"></option>
                                <option value="rgb(240, 102, 102)"></option>
                                <option value="rgb(255, 194, 102)"></option>
                                <option value="rgb(255, 255, 102)"></option>
                                <option value="rgb(102, 185, 102)"></option>
                                <option value="rgb(102, 163, 224)"></option>
                                <option value="rgb(194, 133, 255)"></option>
                                <option value="rgb(136, 136, 136)"></option>
                                <option value="rgb(161, 0, 0)"></option>
                                <option value="rgb(178, 107, 0)"></option>
                                <option value="rgb(178, 178, 0)"></option>
                                <option value="rgb(0, 97, 0)"></option>
                                <option value="rgb(0, 71, 178)"></option>
                                <option value="rgb(107, 36, 178)"></option>
                                <option value="rgb(68, 68, 68)"></option>
                                <option value="rgb(92, 0, 0)"></option>
                                <option value="rgb(102, 61, 0)"></option>
                                <option value="rgb(102, 102, 0)"></option>
                                <option value="rgb(0, 55, 0)"></option>
                                <option value="rgb(0, 41, 102)"></option>
                                <option value="rgb(61, 20, 102)"></option>
                            </select><span class="ql-format-separator"></span>
                            <select title="Background Color" class="ql-background">
                                <option value="rgb(0, 0, 0)"></option>
                                <option value="rgb(230, 0, 0)"></option>
                                <option value="rgb(255, 153, 0)"></option>
                                <option value="rgb(255, 255, 0)"></option>
                                <option value="rgb(0, 138, 0)"></option>
                                <option value="rgb(0, 102, 204)"></option>
                                <option value="rgb(153, 51, 255)"></option>
                                <option value="rgb(255, 255, 255)" selected></option>
                                <option value="rgb(250, 204, 204)"></option>
                                <option value="rgb(255, 235, 204)"></option>
                                <option value="rgb(255, 255, 204)"></option>
                                <option value="rgb(204, 232, 204)"></option>
                                <option value="rgb(204, 224, 245)"></option>
                                <option value="rgb(235, 214, 255)"></option>
                                <option value="rgb(187, 187, 187)"></option>
                                <option value="rgb(240, 102, 102)"></option>
                                <option value="rgb(255, 194, 102)"></option>
                                <option value="rgb(255, 255, 102)"></option>
                                <option value="rgb(102, 185, 102)"></option>
                                <option value="rgb(102, 163, 224)"></option>
                                <option value="rgb(194, 133, 255)"></option>
                                <option value="rgb(136, 136, 136)"></option>
                                <option value="rgb(161, 0, 0)"></option>
                                <option value="rgb(178, 107, 0)"></option>
                                <option value="rgb(178, 178, 0)"></option>
                                <option value="rgb(0, 97, 0)"></option>
                                <option value="rgb(0, 71, 178)"></option>
                                <option value="rgb(107, 36, 178)"></option>
                                <option value="rgb(68, 68, 68)"></option>
                                <option value="rgb(92, 0, 0)"></option>
                                <option value="rgb(102, 61, 0)"></option>
                                <option value="rgb(102, 102, 0)"></option>
                                <option value="rgb(0, 55, 0)"></option>
                                <option value="rgb(0, 41, 102)"></option>
                                <option value="rgb(61, 20, 102)"></option>
                            </select><span class="ql-format-separator"></span>
                            
                        </span><span class="ql-format-group"><span title="List" class="ql-format-button ql-list"></span>
                                   <span class="ql-format-separator"></span>
                                   <span title="Bullet" class="ql-format-button ql-bullet"></span>
                                   <span class="ql-format-separator"></span>
                                   <select title="Text Alignment" class="ql-align">
                                       <option value="left" selected></option>
                                       <option value="center"></option>
                                       <option value="right"></option>
                                       <option value="justify"></option>
                                   </select>
                        </span>
                    </div>
                    <div class="editor-container"></div>
                </div>
                    <a class="btn btn-primary btn-submit-answer btn-sm" style=" margin-top: 10px;">Submit Answer</a>
                </div>

            <!--div to show Ask to Answer module-->
            <div class="well panel panel-default col-md-12" id="userToAnswer" style="margin-top:30px;">
                <h4>Ask to Answer</h4><hr id="bigseparator" />
                <!--div for loading message for the ask to answer module-->
                <div id="loadingasktoanswer">
                    <i class="fa fa-refresh fa-spin"></i><span> Loading....</span>
                </div>
            </div>
        </div>
       
        </div>
    <div class="col-md-4">
        <div class="tagCloud" style="margin-bottom:40px;">
            <h4>Related Questions</h4>
            <div class="list-group">
                <a href="#" class="list-group">
                    <p class="list-group-item-heading">List group item heading</p>                   
                </a>
                <a href="#" class="list-group">
                    <p class="list-group-item-heading">List group item heading</p>
                </a>
                <a href="#" class="list-group">
                    <p class="list-group-item-heading">List group item heading</p>                   
                </a>
                <a href="#" class="list-group">
                    <p class="list-group-item-heading">List group item heading</p>
                </a>
            </div>
        </div>        
        <div class="tagCloud" style="margin-bottom:40px;">
            <h4>Hot Questions</h4>
            <div class="list-group">
                <a href="#" class="list-group">
                    <p class="list-group-item-heading">List group item heading</p>
                </a>
                <a href="#" class="list-group">
                    <p class="list-group-item-heading">List group item heading</p>
                  </a>
                <a href="#" class="list-group">
                    <p class="list-group-item-heading">List group item heading</p>
                </a>
                <a href="#" class="list-group">
                    <p class="list-group-item-heading">List group item heading</p>
                </a>
            </div>
        </div>
        </div>
      
</div>

