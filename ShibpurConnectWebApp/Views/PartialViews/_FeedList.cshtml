<style type="text/css">
    /*resize profile images to improve page load time*/
    img.resize {
        width: 200px;
        height: 40px;
    }

    /*question title font-face size*/
    .question-hyperlink{
        font-size:18px;
    }
    /*CSS form the toolbas to create question*/
    #toolbar
    {
        height: 70px;
        margin-top: 40px;
    }

    div.main {
        float: left;
        position: relative;
        padding-left: 10px;
    }

    #threads {
        clear: both;
        float: left;
        margin-bottom: 20px;
    }

    div.thread {
        padding: 12px 0 10px 0;
        border-bottom: 1px solid #e0e0e0;
        padding: 15px 0;
        float: left;
    }

    div.user {
        width: 70px;
        text-align: center;
        height: 70px;
        display: block;
        float: left;
        margin-right: 12px;
    }

    /*.avatar {
        border-radius: 50%;
        background-color: #CCCCCA;
        cursor: pointer;
        -webkit-transition: opacity ease-in-out .25s 0s;
        -moz-transition: opacity ease-in-out .25s 0s;
        -o-transition: opacity ease-in-out .25s 0s;
        transition: opacity ease-in-out .25s 0s;
    }*/

    div.detail {
        float: left;
        /*break a continuous long string*/
        word-break:break-all
    }

    .detail h3 {
        font-size: 20px;
        line-height: 1.4;
        margin-bottom: .5em;
        margin-top: 0;
    }

    .tags {
        padding: 0;
        margin-top: 2%;
    }

    a:visited {
        color: #0c65a5;
    }

    div.stat {
        color: #808080;
        padding-top: 10px;
        font-size: 9pt;
    }

        div.stat span {
            display: inline-block;
            width: 100%;
        }

        div.stat span.answercount, div.stat span.viewcount{
        width: 40%;
        float:left;
    }

    footer {
        float: left;
        clear: both;
    }
    .pagination
    {
        display: none;
    }
    .pagination>li>a
    {
        color: #337ab7;
        background-color: #fff;
        border: 1px solid #ddd;
    }
    .pagination>.active>a
    {
        color: #fff;
        background-color: #337ab7;
        border-color: #337ab7;
    }
</style>

<script type="text/javascript">
    function getMonth(month)
    {
        var monthArray = {
            "0": "Jan",
            "1": "Feb",
            "2": "Mar",
            "3": "Apr",
            "4": "May",
            "5": "Jun",
            "6": "Jul",
            "7": "Aug",
            "8": "Sep",
            "9": "Oct",
            "10": "Nov",
            "11": "Dec",
        }

        return monthArray[month];
    }

    $(document).ready(function () {

        loadQuestions(0);
        $('.pagination li a').click(function () {
            var anchor = $(this);
            $('.pagination').hide();
            $('#threads .thread:not(.hide)').remove();
            //$('#loadingdiv').show();
            var page = parseInt($(anchor).text());
            loadQuestions(page - 1);
            $('.pagination li.disabled').removeClass('disabled');
            $(anchor).parent().addClass('disabled');
            return false;
        });
    });

    function loadQuestions(pageNumber)
    {
        var url = window.location.href;
        if (url.indexOf("FeedByCategory") > 1) {
            var splitArr = url.split('/');
            //var category = splitArr[splitArr.length - 1];
            var category = getQueryStringParam('category');
            //category = decodeURIComponent(category);

            scAjax({
                "url": "questions/GetQuestionsByCategory",
                "data": { "category": category, "page": pageNumber },
                "success": function (result) {
                    if (!result) {
                        return;
                    }
                    // hide the loading div
                    $('#loadingdiv').hide();
                    var questions = result;
                    var totalPages = questions[0].totalPages || 0;
                    buildPagination(totalPages);
                    createQuestions(questions);                    
                    $('.pagination').show();
                }
            });
        }
        else {
            scAjax({
                "url": "questions/GetQuestions",
                "data": { "page": pageNumber },
                "success": function (result) {
                    if (!result) {
                        return;
                    }
                    // hide the loading symbol
                    $('#loadingdiv').hide();
                    var questions = result;
                    if (pageNumber == 0)
                    {
                        var totalPages = questions[0].totalPages || 0;
                        buildPagination(totalPages);
                    }
                    createQuestions(questions);
                    $('.pagination').show();
                },
                "error": function (err) {
                    // hide the loading symbol
                    $('#loadingdiv').hide();

                    // temporarily adding this, will remove it later. this is to identify whats going wrong here.
                    alert(err);
                }
            });
        }
    }

    function buildPagination(pages)
    {
        $('.pagination li').remove();

        if (pages == 1)
        {
            return;
        }
        for(var i = 1; i <= pages; i++)
        {
            var anchor = $('<a>').text(i).attr('href', '#');
            var li = $('<li>').append(anchor);
            if (i == 1)
            {
                $(li).addClass('disabled');
            }
            $('.pagination').append(li);
            $(anchor).click(function () {
                var link = $(this);
                $('.pagination').hide();
                $('#threads .thread:not(.hide)').remove();
                $('#loadingdiv').show();
                var page = parseInt($(link).text());
                loadQuestions(page - 1);
                $('.pagination li.disabled').removeClass('disabled');
                $(link).parent().addClass('disabled');
                return false;
            });
        }
    }

    function createQuestions(questions)
    {
        if(!questions)
        {
            return;
        }

        $(questions).each(function (index, question) {
            var thread = $('div.thread.hide').clone();
            var utcDate = new Date(question.postedOnUtc);
            var dateString = getMonth(utcDate.getMonth().toString()) + " " + utcDate.getDate() + ", " + utcDate.getFullYear();

            $(thread).removeClass('hide');
            var userNameAnchor = $(thread).find('div.user a.userName');
            if (question.userProfileImage) {
                var userProfileImage = $(thread).find('div.user img.avatar');
                // form the smaller imgur image by adding 's' before '.jpg'
                if (question.userProfileImage.charAt(question.userProfileImage.indexOf('.jpg') - 1) != 's') {
                    question.userProfileImage = question.userProfileImage.replace('.jpg', 's.jpg');
                }
                else
                    question.userProfileImage = question.userProfileImage;

                $(userProfileImage).attr('src', IMGURPATH + question.userProfileImage);
            }
            $(userNameAnchor).text(question.displayName);
            if (question.userEmail != null) {
                var url = $(userNameAnchor).attr('href') + '?userId=' + question.userId;
                $(userNameAnchor).attr('href', url);
            }
            //$(thread).find('div.user').attr('onclick', "window.location='.././Account/Profile?userEmail=" + question.userEmail + "'");
            if (question.urlSlug != null)
                $(thread).find('div.detail a').text(question.title).attr('href', '/feed/' + question.urlSlug);
            else
                $(thread).find('div.detail a').text(question.title).attr('href', '/feed/' + question.questionId);
            $(thread).find('div.detail a').attr('class', 'question-hyperlink');
            // extract only text from the question description, if user has image in the question description we will be able to remove those
            var tempdescription = '<p>' + question.description + '</p>';
            $(thread).find('div.detail .excerpt').append($(tempdescription).text().substring(0, 250));
            $(thread).find('div.stat span.date').text(dateString);
            //updateAnswerCount(question.questionId, $(thread).find('div.stat span.answercount'));
            var answerCount = question.answerCount || 0;
            var answerCountSpan = $(thread).find('div.stat span.answercount');
            if (answerCount > 1)
            {
                $(answerCountSpan).html("<b>" + answerCount + "</b>" + " answers");
            }
            else
            {
                $(answerCountSpan).html("<b>" + answerCount + "</b>" + " answer");
            }
            if (question.viewCount > 1)
                $(thread).find('div.stat span.viewcount').html("<b>" + question.viewCount + "</b>" + " views");
            else
                $(thread).find('div.stat span.viewcount').html("<b>" + question.viewCount + "</b>" + " view");
            //$(thread).find('div.stat span.answercount').text((question.comments || "0") + " answers");

            if (question.categories) {
                $(question.categories).each(function (i, category) {
                    var tagAnchor = $('<a>').addClass('post-tag').text(category).attr('href', "/Feed/FeedByCategory?category=" + category);
                    $(thread).find('div.tags').append(tagAnchor);
                });
            }

            $('#threads').append(thread);
        });
    }

    function updateAnswerCount(questionId, span)
    {
        if(!questionId || !span)
        {
            return;
        }

        scAjax({
            "url": "questions/GetAnswersCount",
            "data": { "questionId": questionId },
            "success": function (result) {
                if (result > 1)
                    $(span).html("<b>" + (result || "0") + "</b>" + " answers");
                else
                    $(span).html("<b>" + (result || "0") + "</b>" + " answer");
            }
        });
    }
</script>



<div class="main">    
    <div id="threads">        
        <!--div for loading message for the question list-->      
        <div class="hide thread col-md-12 col-xs-12">
            <div class="user col-xs-5 hidden-xs">
                <img class="avatar" src="/Content/images/profile-image.jpg">
                <a class="userName twelvepxfont" href="\Account\Profile"></a>
            </div>
            <div class="detail col-md-10">
                @*<h3>*@
                    <a href="#"></a>
                @*</h3>*@
                <div class="excerpt">

                </div>
                <div class="tags col-md-8">
                </div>
                <div class="stat col-md-4">
                    <span class="date"></span>
                    <span>
                        <span class="viewcount"></span>
                        <span class="answercount"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <nav>
        <ul class="pagination pagination-sm">           
        </ul>
    </nav>     
</div>

<div id="loadingdiv">
    <i class="fa fa-refresh fa-spin"></i><span> Loading....</span>
</div> 
