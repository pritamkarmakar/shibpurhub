<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hangfire.Mongo</name>
    </assembly>
    <members>
        <member name="T:Hangfire.Mongo.CountersAggregator">
            <summary>
            Represents Counter collection aggregator for Mongo database
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.CountersAggregator.#ctor(Hangfire.Mongo.MongoStorage,System.TimeSpan)">
            <summary>
            Constructs Counter collection aggregator
            </summary>
            <param name="storage">MongoDB storage</param>
            <param name="interval">Checking interval</param>
        </member>
        <member name="M:Hangfire.Mongo.CountersAggregator.Execute(System.Threading.CancellationToken)">
            <summary>
            Runs aggregator
            </summary>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:Hangfire.Mongo.CountersAggregator.ToString">
            <summary>
            Returns text representation of the object
            </summary>
        </member>
        <member name="T:Hangfire.Mongo.Database.HangfireDbContext">
            <summary>
            Represents Mongo database context for Hangfire
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.Database.HangfireDbContext.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs context with connection string and database name
            </summary>
            <param name="connectionString">Connection string for Mongo database</param>
            <param name="databaseName">Database name</param>
            <param name="prefix">Collections prefix</param>
        </member>
        <member name="M:Hangfire.Mongo.Database.HangfireDbContext.#ctor(MongoDB.Driver.IMongoDatabase)">
            <summary>
            Constructs context with existing Mongo database connection
            </summary>
            <param name="database">Database connection</param>
        </member>
        <member name="M:Hangfire.Mongo.Database.HangfireDbContext.Init">
            <summary>
            Initializes intial collections schema for Hangfire
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.Database.HangfireDbContext.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.ConnectionId">
            <summary>
            Mongo database connection identifier
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.Identifiers">
            <summary>
            Reference to collection which contains identifiers
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.DistributedLock">
            <summary>
            Reference to collection which contains distributed locks
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.Counter">
            <summary>
            Reference to collection which contains counters
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.AggregatedCounter">
            <summary>
            Reference to collection which contains aggregated counters
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.Hash">
            <summary>
            Reference to collection which contains hashes
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.Job">
            <summary>
            Reference to collection which contains jobs
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.JobParameter">
            <summary>
            Reference to collection which contains jobs parameters
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.JobQueue">
            <summary>
            Reference to collection which contains jobs queues
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.List">
            <summary>
            Reference to collection which contains lists
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.Schema">
            <summary>
            Reference to collection which contains schemas
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.Server">
            <summary>
            Reference to collection which contains servers information
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.Set">
            <summary>
            Reference to collection which contains sets
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.Database.HangfireDbContext.State">
            <summary>
            Reference to collection which contains states
            </summary>
        </member>
        <member name="T:Hangfire.Mongo.DistributedLock.MongoDistributedLockException">
            <summary>
            Represents exceptions for distributed lock implementation for MongoDB
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.DistributedLock.MongoDistributedLockException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Hangfire.Mongo.DistributedLock.MongoDistributedLockException.#ctor(System.String,System.Exception)">
            <summary>
            Creates exception with inner exception
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Hangfire.Mongo.ExpirationManager">
            <summary>
            Represents Hangfire expiration manager for Mongo database
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.ExpirationManager.#ctor(Hangfire.Mongo.MongoStorage)">
            <summary>
            Constructs expiration manager with one hour checking interval
            </summary>
            <param name="storage">MongoDB storage</param>
        </member>
        <member name="M:Hangfire.Mongo.ExpirationManager.#ctor(Hangfire.Mongo.MongoStorage,System.TimeSpan)">
            <summary>
            Constructs expiration manager with specified checking interval
            </summary>
            <param name="storage">MongoDB storage</param>
            <param name="checkInterval">Checking interval</param>
        </member>
        <member name="M:Hangfire.Mongo.ExpirationManager.Execute(System.Threading.CancellationToken)">
            <summary>
            Run expiration manager to remove outdated records
            </summary>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:Hangfire.Mongo.ExpirationManager.ToString">
            <summary>
            Returns text representation of the object
            </summary>
        </member>
        <member name="T:Hangfire.Mongo.MongoBootstrapperConfigurationExtensions">
            <summary>
            Represents extensions to configure MongoDB storage for Hangfire
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoBootstrapperConfigurationExtensions.UseMongoStorage(Hangfire.IBootstrapperConfiguration,System.String,System.String)">
            <summary>
            Configure Hangfire to use MongoDB storage
            </summary>
            <param name="configuration">Configuration</param>
            <param name="connectionString">Connection string for Mongo database, for example 'mongodb://username:passwordY@host:port'</param>
            <param name="databaseName">Name of database at Mongo server</param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoBootstrapperConfigurationExtensions.UseMongoStorage(Hangfire.IBootstrapperConfiguration,System.String,System.String,Hangfire.Mongo.MongoStorageOptions)">
            <summary>
            Configure Hangfire to use MongoDB storage
            </summary>
            <param name="configuration">Configuration</param>
            <param name="connectionString">Connection string for Mongo database, for example 'mongodb://username:passwordY@host:port'</param>
            <param name="databaseName">Name of database at Mongo server</param>
            <param name="options">Storage options</param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoBootstrapperConfigurationExtensions.UseMongoStorage(Hangfire.IGlobalConfiguration,System.String,System.String)">
            <summary>
            Configure Hangfire to use MongoDB storage
            </summary>
            <param name="configuration">Configuration</param>
            <param name="connectionString">Connection string for Mongo database, for example 'mongodb://username:passwordY@host:port'</param>
            <param name="databaseName">Name of database at Mongo server</param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoBootstrapperConfigurationExtensions.UseMongoStorage(Hangfire.IGlobalConfiguration,System.String,System.String,Hangfire.Mongo.MongoStorageOptions)">
            <summary>
            Configure Hangfire to use MongoDB storage
            </summary>
            <param name="configuration">Configuration</param>
            <param name="connectionString">Connection string for Mongo database, for example 'mongodb://username:passwordY@host:port'</param>
            <param name="databaseName">Name of database at Mongo server</param>
            <param name="options">Storage options</param>
            <returns></returns>
        </member>
        <member name="T:Hangfire.Mongo.MongoConnection">
            <summary>
            MongoDB database connection for Hangfire
            </summary>
        </member>
        <member name="T:Hangfire.Mongo.MongoFetchedJob">
            <summary>
            Hangfire fetched job for Mongo database
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoFetchedJob.#ctor(Hangfire.Mongo.Database.HangfireDbContext,System.Int32,System.String,System.String)">
            <summary>
            Constructs fetched job by database connection, identifier, job ID and queue
            </summary>
            <param name="connection">Database connection</param>
            <param name="id">Identifier</param>
            <param name="jobId">Job ID</param>
            <param name="queue">Queue name</param>
        </member>
        <member name="M:Hangfire.Mongo.MongoFetchedJob.RemoveFromQueue">
            <summary>
            Removes fetched job from a queue
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoFetchedJob.Requeue">
            <summary>
            Puts fetched job into a queue
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoFetchedJob.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoFetchedJob.Id">
            <summary>
            Identifier
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoFetchedJob.JobId">
            <summary>
            Job ID
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoFetchedJob.Queue">
            <summary>
            Queue name
            </summary>
        </member>
        <member name="T:Hangfire.Mongo.MongoStorage">
            <summary>
            Hangfire Job Storage implementation for Mongo database
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.#ctor(System.String,System.String)">
            <summary>
            Constructs Job Storage by database connection string and name
            </summary>
            <param name="connectionString">MongoDB connection string</param>
            <param name="databaseName">Database name</param>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.#ctor(System.String,System.String,Hangfire.Mongo.MongoStorageOptions)">
            <summary>
            Constructs Job Storage by database connection string, name andoptions
            </summary>
            <param name="connectionString">MongoDB connection string</param>
            <param name="databaseName">Database name</param>
            <param name="options">Storage options</param>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.GetMonitoringApi">
            <summary>
            Returns Monitoring API object
            </summary>
            <returns>Monitoring API object</returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.GetConnection">
            <summary>
            Returns storage connection
            </summary>
            <returns>Storage connection</returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.GetComponents">
            <summary>
            Returns collection of server components
            </summary>
            <returns>Collection of server components</returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.GetStateHandlers">
            <summary>
            Returns collection of state handers
            </summary>
            <returns>Collection of state handers</returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.WriteOptionsToLog(Hangfire.Logging.ILog)">
            <summary>
            Writes storage options to log
            </summary>
            <param name="logger">Logger</param>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.CreateAndOpenConnection">
            <summary>
            Opens connection to database
            </summary>
            <returns>Database context</returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorage.ToString">
            <summary>
            Returns text representation of the object
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorage.Connection">
            <summary>
            Database context
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorage.QueueProviders">
            <summary>
            Queue providers collection
            </summary>
        </member>
        <member name="T:Hangfire.Mongo.MongoStorageOptions">
            <summary>
            Represents Hangfire storage options for MongoDB implementation
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoStorageOptions.#ctor">
            <summary>
            Constructs storage options with default parameters
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorageOptions.Prefix">
            <summary>
            Collection name prefix for all Hangfire related collections
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorageOptions.QueuePollInterval">
            <summary>
            Poll interval for queue
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorageOptions.InvisibilityTimeout">
            <summary>
            Invisibility timeout
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorageOptions.DistributedLockLifetime">
            <summary>
            Lifetime of distributed lock
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorageOptions.ClientId">
            <summary>
            Cleint identifier
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorageOptions.JobExpirationCheckInterval">
            <summary>
            Expiration check inteval for jobs
            </summary>
        </member>
        <member name="P:Hangfire.Mongo.MongoStorageOptions.CountersAggregateInterval">
            <summary>
            Counters interval
            </summary>
        </member>
        <member name="T:Hangfire.Mongo.MongoUtils.AutoIncrementIdGenerator">
            <summary>
            Represents ID generator for Mongo database
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.AutoIncrementIdGenerator.#ctor">
            <summary>
            Constructs ID generator with empty prefix
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.AutoIncrementIdGenerator.#ctor(System.String)">
            <summary>
            Constructs ID generator with specified prefix
            </summary>
            <param name="prefix">Collection name prefix</param>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.AutoIncrementIdGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates next ID from sequence
            </summary>
            <param name="container">Container which stores identifiers</param>
            <param name="document">Document which stores identifier</param>
            <returns>Generated identifier</returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.AutoIncrementIdGenerator.IsEmpty(System.Object)">
            <summary>
            Checks wheter specified identifier is empty
            </summary>
            <param name="id">Identifier</param>
            <returns>True if identifier is empty; false otherwise</returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.AutoIncrementIdGenerator.FormatNumber(System.Int64)">
            <summary>
            Converts sequence number into appropriate format
            </summary>
            <param name="input">Number</param>
            <returns>Converted number</returns>
        </member>
        <member name="T:Hangfire.Mongo.MongoUtils.AutoIncrementIntIdGenerator">
            <summary>
            Represents ID generator for Mongo database (integer)
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.AutoIncrementIntIdGenerator.FormatNumber(System.Int64)">
            <summary>
            Converts sequence number into appropriate format
            </summary>
            <param name="input">Number</param>
            <returns>Converted number</returns>
        </member>
        <member name="T:Hangfire.Mongo.MongoUtils.AutoIncrementLongIdGenerator">
            <summary>
            Represents ID generator for Mongo database (long)
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.AutoIncrementLongIdGenerator.FormatNumber(System.Int64)">
            <summary>
            Converts sequence number into appropriate format
            </summary>
            <param name="input">Number</param>
            <returns>Converted number</returns>
        </member>
        <member name="T:Hangfire.Mongo.MongoUtils.MongoExtensions">
            <summary>
            Helper utilities to work with Mongo database
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.MongoExtensions.GetServerTimeUtc(MongoDB.Driver.IMongoDatabase)">
            <summary>
            Retreives server time in UTC zone
            </summary>
            <param name="database">Mongo database</param>
            <returns>Server time</returns>
        </member>
        <member name="M:Hangfire.Mongo.MongoUtils.MongoExtensions.GetServerTimeUtc(Hangfire.Mongo.Database.HangfireDbContext)">
            <summary>
            Retreives server time in UTC zone
            </summary>
            <param name="dbContext">Hangfire database context</param>
            <returns>Server time</returns>
        </member>
        <member name="T:Hangfire.Mongo.DistributedLock.MongoDistributedLock">
            <summary>
            Represents distibuted lock implementation for MongoDB
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.DistributedLock.MongoDistributedLock.#ctor(System.String,System.TimeSpan,Hangfire.Mongo.Database.HangfireDbContext,Hangfire.Mongo.MongoStorageOptions)">
            <summary>
            Creates MongoDB distributed lock
            </summary>
            <param name="resource">Lock resource</param>
            <param name="timeout">Lock timeout</param>
            <param name="database">Lock database</param>
            <param name="options">Database options</param>
        </member>
        <member name="M:Hangfire.Mongo.DistributedLock.MongoDistributedLock.StartHeartBeat">
            <summary>
            Starts database heartbeat
            </summary>
        </member>
        <member name="M:Hangfire.Mongo.DistributedLock.MongoDistributedLock.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
    </members>
</doc>
